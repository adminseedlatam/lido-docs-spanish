"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[435],{6448:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var a=n(4848),s=n(8453);const r={},o="Verificaci\xf3n de hash",c={id:"ipfs/hash-verification",title:"Verificaci\xf3n de hash",description:"Es posible que desee verificar la autenticidad e integridad de la aplicaci\xf3n desplegada en IPFS. Esto se puede hacer verificando el CID (hash). Para hacerlo, necesitar\xe1 descargar el c\xf3digo fuente de la aplicaci\xf3n y compilarlo localmente. A continuaci\xf3n, se detallan las instrucciones paso a paso.",source:"@site/docs/ipfs/hash-verification.md",sourceDirName:"ipfs",slug:"/ipfs/hash-verification",permalink:"/ipfs/hash-verification",draft:!1,unlisted:!1,editUrl:"https://github.com/adminseedlatam/lido-docs-spanish/edit/main/docs/ipfs/hash-verification.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Seguridad",permalink:"/ipfs/security"},next:{title:"Aplicaciones IPFS de Lido",permalink:"/ipfs/apps-list"}},l={},d=[{value:"Pasos",id:"pasos",level:2},{value:"Requisitos previos",id:"requisitos-previos",level:3},{value:"1. Clonar el repositorio",id:"1-clonar-el-repositorio",level:3},{value:"2. Hacer checkout del commit que coincida con la versi\xf3n de IPFS",id:"2-hacer-checkout-del-commit-que-coincida-con-la-versi\xf3n-de-ipfs",level:3},{value:"M\xe9todo 1 \u2013 Usando etiquetas de git",id:"m\xe9todo-1--usando-etiquetas-de-git",level:4},{value:"M\xe9todo 2 \u2013 B\xfasqueda en la p\xe1gina de Releases de GitHub",id:"m\xe9todo-2--b\xfasqueda-en-la-p\xe1gina-de-releases-de-github",level:4},{value:"3. Configurar el proyecto",id:"3-configurar-el-proyecto",level:3},{value:"Sin Docker",id:"sin-docker",level:4},{value:"Usando Docker",id:"usando-docker",level:4},{value:"4. Configurar build-info.json",id:"4-configurar-build-infojson",level:3},{value:"5. Compilar la versi\xf3n de IPFS",id:"5-compilar-la-versi\xf3n-de-ipfs",level:3},{value:"6. Crear un archivo CAR y obtener su CID (hash)",id:"6-crear-un-archivo-car-y-obtener-su-cid-hash",level:3},{value:"7. Obtener el CID (hash) de la aplicaci\xf3n desplegada en IPFS",id:"7-obtener-el-cid-hash-de-la-aplicaci\xf3n-desplegada-en-ipfs",level:3}];function t(e){const i={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Details:n}=i;return n||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.h1,{id:"verificaci\xf3n-de-hash",children:"Verificaci\xf3n de hash"}),"\n",(0,a.jsx)(i.p,{children:"Es posible que desee verificar la autenticidad e integridad de la aplicaci\xf3n desplegada en IPFS. Esto se puede hacer verificando el CID (hash). Para hacerlo, necesitar\xe1 descargar el c\xf3digo fuente de la aplicaci\xf3n y compilarlo localmente. A continuaci\xf3n, se detallan las instrucciones paso a paso."}),"\n",(0,a.jsx)(i.h2,{id:"pasos",children:"Pasos"}),"\n",(0,a.jsx)(i.admonition,{type:"info",children:(0,a.jsxs)(i.p,{children:["Tomaremos como ejemplo el ",(0,a.jsx)(i.a,{href:"https://github.com/lidofinance/ethereum-staking-widget",children:"Lido Ethereum Staking Widget"}),"."]})}),"\n",(0,a.jsx)(i.h3,{id:"requisitos-previos",children:"Requisitos previos"}),"\n",(0,a.jsx)(i.p,{children:"Debe tener instaladas estas herramientas en su sistema:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"Node.js 20+"}),"\n",(0,a.jsx)(i.li,{children:"Gestor de paquetes Yarn v1 (classic)"}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"Alternativamente, puede usar Docker para configurar un entorno de compilaci\xf3n. Lea las secciones a continuaci\xf3n para obtener las instrucciones."}),"\n",(0,a.jsx)(i.h3,{id:"1-clonar-el-repositorio",children:"1. Clonar el repositorio"}),"\n",(0,a.jsxs)(i.p,{children:["El repositorio para Ethereum Staking Widget se encuentra aqu\xed: ",(0,a.jsx)(i.a,{href:"https://github.com/lidofinance/ethereum-staking-widget",children:"https://github.com/lidofinance/ethereum-staking-widget"})]}),"\n",(0,a.jsx)(i.h3,{id:"2-hacer-checkout-del-commit-que-coincida-con-la-versi\xf3n-de-ipfs",children:"2. Hacer checkout del commit que coincida con la versi\xf3n de IPFS"}),"\n",(0,a.jsxs)(i.p,{children:["Debe hacer ",(0,a.jsx)(i.code,{children:"git checkout"})," del commit espec\xedfico que coincida con el lanzamiento de la aplicaci\xf3n que desea verificar. De esta manera, puede asegurarse de que la aplicaci\xf3n no incluya otros cambios que afecten al CID."]}),"\n",(0,a.jsx)(i.h4,{id:"m\xe9todo-1--usando-etiquetas-de-git",children:"M\xe9todo 1 \u2013 Usando etiquetas de git"}),"\n",(0,a.jsx)(i.p,{children:"Cada versi\xf3n lanzada tiene su propia etiqueta git, que puede utilizar para hacer checkout."}),"\n",(0,a.jsxs)(i.ol,{children:["\n",(0,a.jsx)(i.li,{children:"Abra la aplicaci\xf3n en su navegador y verifique el lado derecho de su pie de p\xe1gina.\nAll\xed encontrar\xe1 un n\xfamero de versi\xf3n, que en realidad es un enlace a la p\xe1gina de Releases en GitHub."}),"\n",(0,a.jsxs)(i.li,{children:["Ejecute ",(0,a.jsx)(i.code,{children:"git fetch --all --tags --prune"})," para obtener todas las etiquetas."]}),"\n",(0,a.jsxs)(i.li,{children:["Ejecute ",(0,a.jsx)(i.code,{children:"git checkout tags/<version>"}),", donde ",(0,a.jsx)(i.code,{children:"<version>"})," es la versi\xf3n obtenida en el paso 1."]}),"\n"]}),"\n",(0,a.jsx)(i.h4,{id:"m\xe9todo-2--b\xfasqueda-en-la-p\xe1gina-de-releases-de-github",children:"M\xe9todo 2 \u2013 B\xfasqueda en la p\xe1gina de Releases de GitHub"}),"\n",(0,a.jsxs)(i.ol,{children:["\n",(0,a.jsxs)(i.li,{children:["Abra la p\xe1gina de Releases del repositorio del proyecto en GitHub. Para Ethereum Staking Widget es ",(0,a.jsx)(i.a,{href:"https://github.com/lidofinance/ethereum-staking-widget/releases",children:"aqu\xed"}),"."]}),"\n",(0,a.jsx)(i.li,{children:"Busque manualmente el \xfaltimo lanzamiento donde se realiz\xf3 el pinning a IPFS."}),"\n",(0,a.jsx)(i.li,{children:"Busque el hash del commit cerca de la informaci\xf3n del lanzamiento."}),"\n",(0,a.jsxs)(i.li,{children:["Ejecute ",(0,a.jsx)(i.code,{children:"git checkout <hash>"}),", donde ",(0,a.jsx)(i.code,{children:"<hash>"})," es el hash del commit obtenido en el paso anterior."]}),"\n"]}),"\n",(0,a.jsx)(i.h3,{id:"3-configurar-el-proyecto",children:"3. Configurar el proyecto"}),"\n",(0,a.jsx)(i.h4,{id:"sin-docker",children:"Sin Docker"}),"\n",(0,a.jsxs)(i.ol,{children:["\n",(0,a.jsx)(i.li,{children:"Agregue las variables de entorno seg\xfan las instrucciones en el README."}),"\n",(0,a.jsxs)(i.li,{children:["Elimine el directorio ",(0,a.jsx)(i.code,{children:"node_modules"})," si el proyecto ya estaba configurado anteriormente."]}),"\n",(0,a.jsxs)(i.li,{children:["Instale los m\xf3dulos de Node usando ",(0,a.jsx)(i.code,{children:"yarn install --frozen-lockfile"}),"."]}),"\n",(0,a.jsx)(i.li,{children:"Siga otras instrucciones descritas en el README del proyecto."}),"\n"]}),"\n",(0,a.jsx)(i.h4,{id:"usando-docker",children:"Usando Docker"}),"\n",(0,a.jsx)(i.p,{children:"Si tiene problemas para configurar el entorno o si es su preferencia,\npuede usar Docker para configurar y compilar el proyecto."}),"\n",(0,a.jsxs)(n,{children:[(0,a.jsx)("summary",{children:(0,a.jsx)(i.p,{children:(0,a.jsx)(i.strong,{children:"Pasos para Docker"})})}),(0,a.jsxs)("div",{children:[(0,a.jsxs)(i.ol,{children:["\n",(0,a.jsxs)(i.li,{children:["Configure ",(0,a.jsx)(i.code,{children:"build-info.json"})," como se indica en ",(0,a.jsx)(i.a,{href:"/ipfs/hash-verification#4-configurar-build-infojson",children:"este paso"}),"."]}),"\n",(0,a.jsxs)(i.li,{children:["Cree el archivo ",(0,a.jsx)(i.code,{children:"verification.Dockerfile"})," en la ra\xedz del proyecto con el siguiente contenido:"]}),"\n"]}),(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"# entorno de compilaci\xf3n\nFROM node:20-alpine as build\n\nWORKDIR /app\n\nRUN apk add --no-cache git=~2\nCOPY package.json yarn.lock ./\n\nRUN yarn install --frozen-lockfile --non-interactive --ignore-scripts && yarn cache clean\n\nCOPY . .\nRUN NODE_NO_BUILD_DYNAMICS=true yarn typechain && yarn build-ipfs\n# public/runtime se utiliza para inyectar vars en tiempo de ejecuci\xf3n; deber\xeda existir y el usuario node deber\xeda tener acceso de escritura para ello\nRUN rm -rf /app/public/runtime && mkdir /app/public/runtime && chown node /app/public/runtime\n\n# imagen final\nFROM node:20-alpine as base\n\nWORKDIR /app\nRUN apk add --no-cache curl=~8\nCOPY --from=build /app /app\n"})}),(0,a.jsxs)(i.ol,{start:"3",children:["\n",(0,a.jsx)(i.li,{children:"Agregue las variables de entorno seg\xfan las instrucciones en el README del proyecto."}),"\n",(0,a.jsx)(i.li,{children:"Ejecute estos comandos:"}),"\n"]}),(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"docker build --no-cache -t verification:0 -f verification.Dockerfile .\ndocker create --name verification-container verification:0\ndocker cp verification-container:/app/out /Users/${Name}/${Path-to-project}/dockerbuild-verification\ndocker rm verification-container\n"})}),(0,a.jsxs)(i.ol,{start:"5",children:["\n",(0,a.jsxs)(i.li,{children:["Siga los pasos adicionales desde el ",(0,a.jsx)(i.a,{href:"/ipfs/hash-verification#6-crear-un-archivo-car-y-obtener-su-cid-hash",children:"paso 6"})," de estas instrucciones."]}),"\n"]})]})]}),"\n",(0,a.jsx)(i.h3,{id:"4-configurar-build-infojson",children:"4. Configurar build-info.json"}),"\n",(0,a.jsxs)(i.p,{children:["El archivo ",(0,a.jsx)(i.code,{children:"build-info.json"})," se encuentra en la ra\xedz del proyecto, ",(0,a.jsx)(i.a,{href:"https://github.com/lidofinance/ethereum-staking-widget/blob/develop/build-info.json",children:"aqu\xed est\xe1 el enlace"}),".\nDebe contener informaci\xf3n sobre la versi\xf3n de la aplicaci\xf3n que actualmente est\xe1 desplegada en IPFS.\nPuede obtener esta informaci\xf3n de la \xfaltima acci\xf3n de GitHub en la que se realiz\xf3 el pinning a IPFS:"]}),"\n",(0,a.jsxs)(i.ol,{children:["\n",(0,a.jsx)(i.li,{children:'Abra el repositorio de la aplicaci\xf3n, vaya a la pesta\xf1a "Actions".'}),"\n",(0,a.jsxs)(i.li,{children:['En el lado izquierdo, en la navegaci\xf3n, busque el flujo de trabajo para el lanzamiento de IPFS, para el Ethereum Staking Widget se llama "',(0,a.jsx)(i.a,{href:"https://github.com/lidofinance/ethereum-staking-widget/actions/workflows/ci-ipfs.yml",children:"IPFS Release"}),'".']}),"\n",(0,a.jsxs)(i.li,{children:['Abra el \xfaltimo flujo de trabajo exitoso y busque el t\xedtulo "prepare-for-ipfs summary" o los datos JSON que se ven as\xed:',"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-json",children:'{ "branch": "main", "commit": "56ab68d", "version": "0.0.1" }\n'})}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["Copie los datos a su ",(0,a.jsx)(i.code,{children:"build-info.json"})," local."]}),"\n"]}),"\n",(0,a.jsx)(i.h3,{id:"5-compilar-la-versi\xf3n-de-ipfs",children:"5. Compilar la versi\xf3n de IPFS"}),"\n",(0,a.jsxs)(i.p,{children:["Ejecute un script npm adecuado para compilar la versi\xf3n de IPFS.",(0,a.jsx)(i.br,{}),"\n","En el caso del Ethereum Staking Widget, es ",(0,a.jsx)(i.code,{children:"yarn build-ipfs"}),"."]}),"\n",(0,a.jsx)(i.h3,{id:"6-crear-un-archivo-car-y-obtener-su-cid-hash",children:"6. Crear un archivo CAR y obtener su CID (hash)"}),"\n",(0,a.jsxs)(i.p,{children:["Para aplicaciones Next.js, los archivos de compilaci\xf3n estar\xe1n en el directorio ",(0,a.jsx)(i.code,{children:"out"}),".\nEl siguiente comando genera un archivo CAR a partir del directorio ",(0,a.jsx)(i.code,{children:"out"})," con los archivos de compilaci\xf3n, y mostrar\xe1 el hash IPFS en la consola:"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"npx ipfs-car pack ./out --output ./out.car\n"})}),"\n",(0,a.jsx)(i.h3,{id:"7-obtener-el-cid-hash-de-la-aplicaci\xf3n-desplegada-en-ipfs",children:"7. Obtener el CID (hash) de la aplicaci\xf3n desplegada en IPFS"}),"\n",(0,a.jsxs)(i.p,{children:["Necesitar\xe1 obtener el hash del archivo CAR m\xe1s recientemente lanzado.",(0,a.jsx)(i.br,{}),"\n",'Puede encontrarlo en la p\xe1gina de Releases del repositorio bajo el bloque "Assets" colapsable.\nDescargue el archivo CAR y ejecute el siguiente comando:']}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"npx ipfs-car roots ipfs_source_code.car\n"})}),"\n",(0,a.jsx)(i.p,{children:"Esto mostrar\xe1 las ra\xedces CID encontradas en el encabezado del CAR. El CID (hash) debe ser el mismo que en el paso anterior."})]})}function h(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(t,{...e})}):t(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>c});var a=n(6540);const s={},r=a.createContext(s);function o(e){const i=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(r.Provider,{value:i},e.children)}}}]);