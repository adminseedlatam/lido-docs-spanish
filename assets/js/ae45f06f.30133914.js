"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2174],{1807:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>l,toc:()=>a});var r=s(4848),t=s(8453);const d={},i="Lido",l={id:"contracts/lido",title:"Lido",description:"- Source code",source:"@site/docs/contracts/lido.md",sourceDirName:"contracts",slug:"/contracts/lido",permalink:"/lido-docs-spanish/contracts/lido",draft:!1,unlisted:!1,editUrl:"https://github.com/adminseedlatam/lido-docs-spanish/edit/main/docs/contracts/lido.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"LidoLocator",permalink:"/lido-docs-spanish/contracts/lido-locator"},next:{title:"EIP712StETH",permalink:"/lido-docs-spanish/contracts/eip712-steth"}},c={},a=[{value:"What is Lido?",id:"what-is-lido",level:2},{value:"Submit",id:"submit",level:2},{value:"Deposit",id:"deposit",level:2},{value:"Redeem",id:"redeem",level:2},{value:"Rebase",id:"rebase",level:2},{value:"Oracle report",id:"oracle-report",level:2},{value:"Standards",id:"standards",level:2},{value:"Staking-related Methods",id:"staking-related-methods",level:2},{value:"fallback",id:"fallback",level:3},{value:"submit()",id:"submit-1",level:3},{value:"getBufferedEther()",id:"getbufferedether",level:3},{value:"isStakingPaused()",id:"isstakingpaused",level:3},{value:"getCurrentStakeLimit()",id:"getcurrentstakelimit",level:3},{value:"getStakeLimitFullInfo()",id:"getstakelimitfullinfo",level:3},{value:"Deposit-related methods",id:"deposit-related-methods",level:2},{value:"deposit()",id:"deposit-1",level:3},{value:"getDepositableEther()",id:"getdepositableether",level:3},{value:"canDeposit()",id:"candeposit",level:3},{value:"Accounting-related methods",id:"accounting-related-methods",level:2},{value:"handleOracleReport()",id:"handleoraclereport",level:3},{value:"getTotalPooledEther()",id:"gettotalpooledether",level:3},{value:"getTotalELRewardsCollected()",id:"gettotalelrewardscollected",level:3},{value:"getBeaconStat()",id:"getbeaconstat",level:3},{value:"receiveELRewards()",id:"receiveelrewards",level:3},{value:"receiveWithdrawals()",id:"receivewithdrawals",level:3},{value:"Protocol levers",id:"protocol-levers",level:2},{value:"stop()",id:"stop",level:3},{value:"resume()",id:"resume",level:3},{value:"pauseStaking()",id:"pausestaking",level:3},{value:"resumeStaking()",id:"resumestaking",level:3},{value:"setStakingLimit()",id:"setstakinglimit",level:3},{value:"removeStakingLimit()",id:"removestakinglimit",level:3},{value:"unsafeChangeDepositedValidators()",id:"unsafechangedepositedvalidators",level:3},{value:"<code>ERC-20</code>-related Methods",id:"erc-20-related-methods",level:2},{value:"name()",id:"name",level:3},{value:"symbol()",id:"symbol",level:3},{value:"decimals()",id:"decimals",level:3},{value:"totalSupply()",id:"totalsupply",level:3},{value:"balanceOf()",id:"balanceof",level:3},{value:"allowance()",id:"allowance",level:3},{value:"approve()",id:"approve",level:3},{value:"increaseAllowance()",id:"increaseallowance",level:3},{value:"decreaseAllowance()",id:"decreaseallowance",level:3},{value:"transfer()",id:"transfer",level:3},{value:"transferFrom()",id:"transferfrom",level:3},{value:"Shares-related Methods",id:"shares-related-methods",level:2},{value:"getTotalShares()",id:"gettotalshares",level:3},{value:"sharesOf()",id:"sharesof",level:3},{value:"getSharesByPooledEth()",id:"getsharesbypooledeth",level:3},{value:"getPooledEthByShares()",id:"getpooledethbyshares",level:3},{value:"transferShares()",id:"transfershares",level:3},{value:"transferSharesFrom()",id:"transfersharesfrom",level:3},{value:"<code>ERC-2612</code>-related methods",id:"erc-2612-related-methods",level:2},{value:"nonces()",id:"nonces",level:3},{value:"DOMAIN_SEPARATOR()",id:"domain_separator",level:3},{value:"permit()",id:"permit",level:3},{value:"<code>ERC-712</code>-related methods",id:"erc-712-related-methods",level:2},{value:"eip712Domain()",id:"eip712domain",level:3},{value:"General Methods",id:"general-methods",level:2},{value:"getLidoLocator()",id:"getlidolocator",level:3},{value:"getContractVersion()",id:"getcontractversion",level:3},{value:"transferToVault()",id:"transfertovault",level:3}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"lido",children:"Lido"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/lidofinance/lido-dao/blob/master/contracts/0.4.24/Lido.sol",children:"Source code"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://etherscan.io/address/0xae7ab96520de3a18e5e111b5eaab095312d7fe84",children:"Deployed contract"})}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Liquid staking pool and a related ",(0,r.jsx)(n.a,{href:"https://eips.ethereum.org/EIPS/eip-20",children:"ERC-20"}),"\nrebasing token (",(0,r.jsx)(n.code,{children:"stETH"}),")"]}),"\n",(0,r.jsx)(n.h2,{id:"what-is-lido",children:"What is Lido?"}),"\n",(0,r.jsx)(n.p,{children:"Lido is a liquid staking pool and the core contract that is responsible for:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"accepting users' stake, buffering it and minting respective amounts of liquid token"}),"\n",(0,r.jsx)(n.li,{children:"do a proper accounting based on received oracle reports and the current state of the protocol"}),"\n",(0,r.jsx)(n.li,{children:"collecting withdrawals, priority fees and MEV from respective vaults into the buffer"}),"\n",(0,r.jsx)(n.li,{children:"applying fees and distributing rewards"}),"\n",(0,r.jsxs)(n.li,{children:["passing buffered ether further to ",(0,r.jsx)(n.a,{href:"/contracts/staking-router",children:"StakingRouter"})," or ",(0,r.jsx)(n.a,{href:"/contracts/withdrawal-queue-erc721",children:"WithdrawalQueueERC721"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Also, Lido is an ",(0,r.jsx)(n.a,{href:"https://eips.ethereum.org/EIPS/eip-20",children:"ERC-20"})," rebasing token,\nwhich represents staked ether, ",(0,r.jsx)(n.code,{children:"stETH"}),". Tokens are minted upon ether submission and\nburned when redeemed. ",(0,r.jsx)(n.code,{children:"stETH"})," holder balances are updated daily with oracle\nreports.\nIt also implements the ",(0,r.jsx)(n.a,{href:"https://eips.ethereum.org/EIPS/eip-2612",children:"ERC-2612"}),"\npermit and ",(0,r.jsx)(n.a,{href:"https://eips.ethereum.org/EIPS/eip-1271",children:"ERC-1271"})," signature\nvalidation extensions."]}),"\n",(0,r.jsx)(n.p,{children:"Other contracts are bound to the core and have the following responsibilities:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/lido-locator",children:(0,r.jsx)(n.code,{children:"LidoLocator"})}),": protocol-wide address book which contains\nreferences to all meaningful parts of the Lido protocol on-chain"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/withdrawal-queue-erc721",children:(0,r.jsx)(n.code,{children:"WithdrawalQueueERC721"})}),": a withdrawal requests\nFIFO queue and a respective NFT (unstETH)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/staking-router",children:(0,r.jsx)(n.code,{children:"StakingRouter"})}),": hub, which manages staking modules and\ndistributes the stake among them"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/node-operators-registry",children:(0,r.jsx)(n.code,{children:"NodeOperatorsRegistry"})}),": original module,\nresponsible for managing the curated set of node operators"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/oracle-report-sanity-checker",children:(0,r.jsx)(n.code,{children:"OracleReportSanityChecker"})}),": helper for\nvalidation of oracle report parameters and smoothening token rebases"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/burner",children:(0,r.jsx)(n.code,{children:"Burner"})}),": vault to contain ",(0,r.jsx)(n.code,{children:"stETH"})," that ought to be burned on\noracle report"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/withdrawal-vault",children:(0,r.jsx)(n.code,{children:"WithdrawalVault"})}),": vault to collect partial and full\nwithdrawals coming from the Beacon Chain"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/lido-execution-layer-rewards-vault",children:(0,r.jsx)(n.code,{children:"LidoExecutionLayerRewardsVault"})}),":\nvault to collect priority fees and MEV rewards coming from validators of the pool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/deposit-security-module",children:(0,r.jsx)(n.code,{children:"DepositSecurityModule"})}),": protection from\ndeposit frontrunning vulnerability"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/accounting-oracle",children:(0,r.jsx)(n.code,{children:"AccountingOracle"})}),": oracle committee, which gathers\nan accounting report for the protocol"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/eip712-steth",children:(0,r.jsx)(n.code,{children:"EIP712StETH"})}),": ad-hoc helper to implement ERC-2612 permit\nfor Solidity 0.4.24 Lido contract"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"submit",children:"Submit"}),"\n",(0,r.jsxs)(n.p,{children:["Lido contract is a main entry point for stakers. To take part in the pool, a\nuser can send some ETH to the contract address and the same amount of ",(0,r.jsx)(n.code,{children:"stETH"}),"\ntokens will be minted to the sender address. Submitted ether is accumulated in\nthe buffer and can be passed further to\n",(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/withdrawal-queue-erc721",children:(0,r.jsx)(n.code,{children:"WithdrawalQueueERC721"})})," to fulfill withdrawal\nrequests or to ",(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/staking-router",children:(0,r.jsx)(n.code,{children:"StakingRouter"})})," to deposit as a new\nvalidator stake."]}),"\n",(0,r.jsxs)(n.p,{children:["To withdraw the underlying ETH back, a user may use the ",(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/withdrawal-queue-erc721",children:(0,r.jsx)(n.code,{children:"WithdrawalQueueERC721"})})," contract or swap the token on the secondary market (it may be a cheaper and faster alternative)."]}),"\n",(0,r.jsx)(n.h2,{id:"deposit",children:"Deposit"}),"\n",(0,r.jsxs)(n.p,{children:["User-submitted ether is stored in the buffer and can be later used for\nwithdrawals or passed further to ",(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/staking-router",children:(0,r.jsx)(n.code,{children:"StakingRouter"})})," to be\nused as validator's deposits. It happens asynchronously and uses\n",(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/deposit-security-module",children:(0,r.jsx)(n.code,{children:"DepositSecurityModule"})})," as a guard to prevent\ndeposit frontrunning vulnerability."]}),"\n",(0,r.jsx)(n.mermaid,{value:"graph LR;\n  A[/  \\]--depositBufferedEther--\x3eDepositSecurityModule--\x3eLido--\x3eStakingRouter--\x3eNodeOperatorsRegistry;"}),"\n",(0,r.jsx)(n.h2,{id:"redeem",children:"Redeem"}),"\n",(0,r.jsxs)(n.p,{children:["The token might be redeemed for ether through the protocol using\nthe ",(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/withdrawal-queue-erc721",children:(0,r.jsx)(n.code,{children:"WithdrawalQueueERC721"})})," contract leveraging ",(0,r.jsx)(n.a,{href:"https://ethereum.org/en/staking/withdrawals/",children:"staking withdrawals"}),'\nenabled with the Shanghai/Capella (aka "Shapella") Ethereum hardfork.']}),"\n",(0,r.jsx)(n.h2,{id:"rebase",children:"Rebase"}),"\n",(0,r.jsxs)(n.p,{children:["When an oracle report occurs, the supply of the token is increased or decreased\nalgorithmically, based on staking rewards (or slashing penalties) on the Beacon\nChain, execution layer rewards (starting from\n",(0,r.jsx)(n.a,{href:"https://ethereum.org/en/upgrades/merge/",children:"the Merge"})," Ethereum upgrade) or\nfulfilled withdrawal requests (starting from\n",(0,r.jsx)(n.a,{href:"https://blog.lido.fi/introducing-lido-v2/",children:"Lido V2"}),"). A rebase happens when\noracle reports beacon stats."]}),"\n",(0,r.jsx)(n.p,{children:'The rebasing mechanism is implemented via the "shares" concept. Instead of\nstoring a map with account balances, Lido stores which share of the total pool\nis owned by the account. The balance of an account is calculated as follows:'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"balanceOf(account) = shares[account] * totalPooledEther / totalShares\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"shares"})," - map of user account shares. Every time a user deposits ether, it is\nconverted to shares and added to the current user shares amount."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"totalShares"})," - the sum of shares of all accounts in the ",(0,r.jsx)(n.code,{children:"shares"})," map"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"totalPooledEther"})," - a sum of three types of ether owned by protocol:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"buffered balance - ether stored on contract and hasn't been deposited or\nlocked for withdrawals yet"}),"\n",(0,r.jsx)(n.li,{children:"transient balance - ether submitted to the official Deposit contract but not\nyet visible in the beacon state"}),"\n",(0,r.jsx)(n.li,{children:"beacon balance - the total amount of ether on validator accounts. This value\nis reported by oracles and makes the strongest impact on stETH total supply\nchange"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"For example, assume that we have:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"totalShares = 5\ntotalPooledEther = 10 ETH\nsharesOf(Alice) -> 1\nsharesOf(Bob) -> 4\n"})}),"\n",(0,r.jsx)(n.p,{children:"Therefore:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"balanceOf(Alice) -> 2 tokens which corresponds to 2 ETH\nbalanceOf(Bob) -> 8 tokens which corresponds to 8 ETH\n"})}),"\n",(0,r.jsxs)(n.p,{children:["On each rebase ",(0,r.jsx)(n.code,{children:"totalPooledEther"})," normally increases, indicating that there were\nsome rewards earned by validators, that ought to be distributed, so the user\nbalance gets increased as well automatically, despite their shares remaining as\nthey were."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"totalPooledEther = 15 ETH\n// user balance increased\nbalanceOf(Alice) -> 3 tokens which corresponds to 3 ETH now\nbalanceOf(Bob) -> 12 tokens which corresponds to 12 ETH now\n// shares remain still\nsharesOf(Alice) -> 1\nsharesOf(Bob) -> 4\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Since the balances of all token holders change when the amount of total pooled\nether changes, this token cannot fully implement the ERC-20 standard: it only\nemits ",(0,r.jsx)(n.code,{children:"Transfer"})," events upon explicit transfer between holders. In contrast,\nwhen the total amount of pooled ether increases, no ",(0,r.jsx)(n.code,{children:"Transfer"})," events are\ngenerated: doing so would require emitting an event for each token holder and\nthus running an unbounded loop."]})}),"\n",(0,r.jsx)(n.h2,{id:"oracle-report",children:"Oracle report"}),"\n",(0,r.jsx)(n.p,{children:"One of the cornerstones of the Lido protocol is the oracle report, that usually\n(but not guaranteed) once a day provides the protocol with the data that can't\nbe easily accessed on-chain, but is required for precise accounting. It includes\nsome Beacon chain stats as well as corresponding EL-side values that are valid\non the reporting block and the decision data required to fulfill pending\nwithdrawal requests."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Beacon chain stats:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"the total number of validators managed by the pool"}),"\n",(0,r.jsx)(n.li,{children:"the total balance of validators managed by the pool"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Historical EL values:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"withdrawal vault balance"}),"\n",(0,r.jsx)(n.li,{children:"execution layer rewards vault balance"}),"\n",(0,r.jsx)(n.li,{children:"burner stETH shares balance"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Withdrawal-related data","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"requests in the queue to be finalized"}),"\n",(0,r.jsx)(n.li,{children:"share rate to be used for finalization"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Oracle report is processed in 9 simple steps:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Memorize the pre-state that will be required for incremental updates of the\nprotocol balance"}),"\n",(0,r.jsxs)(n.li,{children:["Validate the report data using ",(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/oracle-report-sanity-checker",children:(0,r.jsx)(n.code,{children:"OracleReportSanityChecker"})})]}),"\n",(0,r.jsxs)(n.li,{children:["Calculate the amount of ether to be locked on ",(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/withdrawal-queue-erc721",children:(0,r.jsx)(n.code,{children:"WithdrawalQueueERC721"})}),"\nand move the respective amount of shares to be burnt to ",(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/burner",children:(0,r.jsx)(n.code,{children:"Burner"})})]}),"\n",(0,r.jsxs)(n.li,{children:["Using ",(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/oracle-report-sanity-checker",children:(0,r.jsx)(n.code,{children:"OracleReportSanityChecker"})}),"\ncalculate the amounts of ether that can be withdrawn from\n",(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/lido-execution-layer-rewards-vault",children:(0,r.jsx)(n.code,{children:"LidoExecutionLayerRewardsVault"})})," and\n",(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/withdrawal-vault",children:(0,r.jsx)(n.code,{children:"WithdrawalVault"})})," as well as the number of shares that\ncan be burnt from ",(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/burner",children:(0,r.jsx)(n.code,{children:"Burner"})})," to avoid the rebase that can be easily\nfrontrun."]}),"\n",(0,r.jsxs)(n.li,{children:["Collect the calculated amounts of ether from vaults and proceed with\nwithdrawal requests finalization: send requested ether to ",(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/withdrawal-queue-erc721",children:(0,r.jsx)(n.code,{children:"WithdrawalQueue"})})]}),"\n",(0,r.jsxs)(n.li,{children:["Burn the previously requested shares from ",(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/burner",children:(0,r.jsx)(n.code,{children:"Burner"})})," for\nwithdrawals or coverage application"]}),"\n",(0,r.jsx)(n.li,{children:"Distribute rewards and protocol fees minting new stETH for the respective\nparties"}),"\n",(0,r.jsx)(n.li,{children:"Complete token rebase by informing observers (emit an event and call the\nexternal receivers if any)"}),"\n",(0,r.jsx)(n.li,{children:"Post-report sanity check for share rate provided with the report"}),"\n"]}),"\n",(0,r.jsx)(n.mermaid,{value:"graph LR;\n  S[/Users' stake/]:::orange-.->B[Lido Buffer];\n  W[WithdrawalsVault]--\x3eB;\n  E[LidoExecutionLayerRewardsVault]--\x3eB;\n  B--\x3eD[StakingRouter];\n  B--\x3eWQ[WithdrawalQueue];\n  classDef orange fill:#f96;\n"}),"\n",(0,r.jsx)(n.p,{children:"So, the observable outcome of the report for the protocol is the following:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"withdrawal requests in the queue are fulfilled"}),"\n",(0,r.jsx)(n.li,{children:"ether is collected from withdrawal and EL rewards vaults to the buffer"}),"\n",(0,r.jsx)(n.li,{children:"CL balance is updated according to the report"}),"\n",(0,r.jsx)(n.li,{children:"rewards are distributed among stakers, staking modules and protocol treasury"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"standards",children:"Standards"}),"\n",(0,r.jsx)(n.p,{children:"Contract implements the following Ethereum standards:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://eips.ethereum.org/EIPS/eip-20",children:"ERC-20: Token Standard"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://eips.ethereum.org/EIPS/eip-2612",children:"ERC-2612: Permit Extension for ERC-20 Signed Approvals"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://eips.ethereum.org/EIPS/eip-712",children:"EIP-712: Typed structured data hashing and signing"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://eips.ethereum.org/EIPS/eip-1271",children:"ERC-1271: Standard Signature Validation Method for Contracts"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"staking-related-methods",children:"Staking-related Methods"}),"\n",(0,r.jsx)(n.h3,{id:"fallback",children:"fallback"}),"\n",(0,r.jsxs)(n.p,{children:["Sends funds to the pool and mints ",(0,r.jsx)(n.code,{children:"StETH"})," tokens to the ",(0,r.jsx)(n.code,{children:"msg.sender"})," address"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function() payable\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"Allows users to submit their funds by sending it to the contract address"})}),"\n",(0,r.jsx)(n.h3,{id:"submit-1",children:"submit()"}),"\n",(0,r.jsxs)(n.p,{children:["Sends funds to the pool with the optional ",(0,r.jsx)(n.code,{children:"_referral"})," parameter and mints ",(0,r.jsx)(n.code,{children:"StETH"}),"\ntokens to the ",(0,r.jsx)(n.code,{children:"msg.sender"})," address."]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"https://lido.fi/referral",children:"https://lido.fi/referral"})," for referral program details."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function submit(address _referral) payable returns (uint256)\n"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_referral"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"address"})}),(0,r.jsx)(n.td,{children:"Optional referral address"})]})})]}),"\n",(0,r.jsxs)(n.p,{children:["Returns the number of ",(0,r.jsx)(n.code,{children:"StETH"})," shares generated."]}),"\n",(0,r.jsx)(n.h3,{id:"getbufferedether",children:"getBufferedEther()"}),"\n",(0,r.jsx)(n.p,{children:"Returns the amount of ether temporarily buffered on the contract's balance."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function getBufferedEther() view returns (uint256)\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["The buffered balance is kept on the contract from the moment the funds are received from a user until the moment\nthey are sent to the official ",(0,r.jsx)(n.a,{href:"https://ethereum.org/en/staking/deposit-contract/",children:"Deposit contract"}),"\nor ",(0,r.jsx)(n.a,{href:"/contracts/withdrawal-queue-erc721",children:(0,r.jsx)(n.code,{children:"WithdrawalsQueueERC721"})})]})}),"\n",(0,r.jsx)(n.h3,{id:"isstakingpaused",children:"isStakingPaused()"}),"\n",(0,r.jsx)(n.p,{children:"Returns staking state: whether it's paused or not."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function isStakingPaused() view returns (bool)\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["'staking' here means the ability to accept new ",(0,r.jsx)(n.a,{href:"/contracts/lido#submit",children:"submit"})," requests"]})}),"\n",(0,r.jsx)(n.h3,{id:"getcurrentstakelimit",children:"getCurrentStakeLimit()"}),"\n",(0,r.jsx)(n.p,{children:"Returns how much ether can be staked in the current block."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function getCurrentStakeLimit() view returns (uint256)\n"})}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.p,{children:"Special return values:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"2^256 - 1"})," if staking is unlimited;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"0"})," if staking is paused or if the limit is exhausted."]}),"\n"]})]}),"\n",(0,r.jsx)(n.h3,{id:"getstakelimitfullinfo",children:"getStakeLimitFullInfo()"}),"\n",(0,r.jsx)(n.p,{children:"Returns full info about current stake limit parameters and state."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function getStakeLimitFullInfo() view returns (\n    bool isStakingPaused,\n    bool isStakingLimitSet,\n    uint256 currentStakeLimit,\n    uint256 maxStakeLimit,\n    uint256 maxStakeLimitGrowthBlocks,\n    uint256 prevStakeLimit,\n    uint256 prevStakeBlockNumber\n)\n"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"isStakingPaused"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"bool"})}),(0,r.jsxs)(n.td,{children:["Staking pause state (equivalent to return of ",(0,r.jsx)(n.code,{children:"isStakingPaused()"}),")"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"isStakingLimitSet"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"bool"})}),(0,r.jsx)(n.td,{children:"Whether the stake limit is set or not"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"currentStakeLimit"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsxs)(n.td,{children:["Current stake limit (equivalent to return of ",(0,r.jsx)(n.code,{children:"getCurrentStakeLimit()"}),")"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"maxStakeLimit"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Max stake limit"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"maxStakeLimitGrowthBlocks"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Blocks needed to restore max stake limit from the fully exhausted state"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"prevStakeLimit"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Previously reached stake limit"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"prevStakeBlockNumber"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Previously seen block number"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"deposit-related-methods",children:"Deposit-related methods"}),"\n",(0,r.jsx)(n.h3,{id:"deposit-1",children:"deposit()"}),"\n",(0,r.jsxs)(n.p,{children:["Deposit buffered ether to the StakingRouter's module with the id of ",(0,r.jsx)(n.code,{children:"_stakingModuleId"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Can be called only by ",(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/deposit-security-module",children:"DepositSecurityModule"})," contract."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function deposit(uint256 _maxDeposits, uint256 _stakingModuleId, bytes _depositCalldata)\n"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_maxDeposits"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Number of max deposit calls"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_stakingModuleId"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Id of the staking module to be deposited"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_depositCalldata"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"bytes"})}),(0,r.jsx)(n.td,{children:"module calldata"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"getdepositableether",children:"getDepositableEther()"}),"\n",(0,r.jsx)(n.p,{children:"Returns the amount of ether available to deposit."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function getDepositableEther() view returns (uint256)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"candeposit",children:"canDeposit()"}),"\n",(0,r.jsxs)(n.p,{children:["Returns ",(0,r.jsx)(n.code,{children:"true"})," if depositing buffered ether to the consensus layer is allowed."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function canDeposit() view returns (bool)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"accounting-related-methods",children:"Accounting-related methods"}),"\n",(0,r.jsx)(n.h3,{id:"handleoraclereport",children:"handleOracleReport()"}),"\n",(0,r.jsx)(n.p,{children:"Updates accounting stats, collects EL rewards and distributes collected rewards\nif beacon balance increased, performs withdrawal requests finalization."}),"\n",(0,r.jsxs)(n.p,{children:["Can be called only by ",(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/accounting-oracle",children:"AccountingOracle"})," contract."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function handleOracleReport(\n    uint256 _reportTimestamp,\n    uint256 _timeElapsed,\n    uint256 _clValidators,\n    uint256 _clBalance,\n    uint256 _withdrawalVaultBalance,\n    uint256 _elRewardsVaultBalance,\n    uint256 _sharesRequestedToBurn,\n    uint256[] _withdrawalFinalizationBatches,\n    uint256 _simulatedShareRate\n) returns (uint256[4] postRebaseAmounts)\n"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_reportTimestamp"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"The moment of the oracle report calculation"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_timeElapsed"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Seconds elapsed since the previous report calculation"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_clValidators"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Number of Lido validators on Consensus Layer"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_clBalance"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Sum of all Lido validators' balances on Consensus Layer"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_withdrawalVaultBalance"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Withdrawal vault balance on Execution Layer"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_elRewardsVaultBalance"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"elRewards vault balance on Execution Layer"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_sharesRequestedToBurn"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"shares requested to burn through Burner"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_withdrawalFinalizationBatches"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256[]"})}),(0,r.jsx)(n.td,{children:"the ascendingly-sorted array of withdrawal request IDs to finalize"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_simulatedShareRate"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"share rate simulated by oracle when (1e27 precision)"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Returns a fixed array of 4 values that represents changes made during the report"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"postRebaseAmounts[0]"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"postTotalPooledEther"})," amount of ether in the protocol"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"postRebaseAmounts[1]"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"postTotalShares"})," amount of shares in the protocol"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"postRebaseAmounts[2]"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"withdrawals"})," withdrawn from the withdrawals vault"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"postRebaseAmounts[3]"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"elRewards"})," withdrawn from the execution layer rewards vault"]})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"gettotalpooledether",children:"getTotalPooledEther()"}),"\n",(0,r.jsx)(n.p,{children:"Returns the entire amount of ether controlled by the protocol"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function getTotalPooledEther() view returns (uint256)\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["The sum of all ETH balances in the protocol, equals to the total supply of ",(0,r.jsx)(n.code,{children:"stETH"}),"."]})}),"\n",(0,r.jsx)(n.h3,{id:"gettotalelrewardscollected",children:"getTotalELRewardsCollected()"}),"\n",(0,r.jsx)(n.p,{children:"Returns the total amount of execution layer rewards collected to Lido contract buffer."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function getTotalELRewardsCollected() view returns (uint256)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"getbeaconstat",children:"getBeaconStat()"}),"\n",(0,r.jsx)(n.p,{children:"Returns the tuple of key statistics related to the Beacon Chain."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function getBeaconStat() view returns (\n    uint256 depositedValidators,\n    uint256 beaconValidators,\n    uint256 beaconBalance\n)\n"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"depositedValidators"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Number of the ever deposited Lido-participating validators"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"beaconValidators"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Number of Lido's validators visible in the Beacon state, reported by oracles"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"beaconBalance"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Total amount of Beacon-side ether (sum of all the balances of Lido validators)"})]})]})]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"depositedValidators"})," is always greater or equal to ",(0,r.jsx)(n.code,{children:"beaconValidators"})]})}),"\n",(0,r.jsx)(n.p,{children:"|"}),"\n",(0,r.jsx)(n.h3,{id:"receiveelrewards",children:"receiveELRewards()"}),"\n",(0,r.jsxs)(n.p,{children:["A payable function for execution layer rewards.\nCan be called only by the ",(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/lido-execution-layer-rewards-vault",children:(0,r.jsx)(n.code,{children:"LidoExecutionLayerRewardsVault"})})," contract."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function receiveELRewards() payable\n"})}),"\n",(0,r.jsx)(n.h3,{id:"receivewithdrawals",children:"receiveWithdrawals()"}),"\n",(0,r.jsxs)(n.p,{children:["A payable function for withdrawals acquisition. Can be called only by ",(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/withdrawal-vault",children:(0,r.jsx)(n.code,{children:"WithdrawalVault"})}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function receiveWithdrawals() payable\n"})}),"\n",(0,r.jsx)(n.h2,{id:"protocol-levers",children:"Protocol levers"}),"\n",(0,r.jsx)(n.h3,{id:"stop",children:"stop()"}),"\n",(0,r.jsx)(n.p,{children:"Stop pool routine operations."}),"\n",(0,r.jsxs)(n.p,{children:["Can be called only by the bearer of ",(0,r.jsx)(n.code,{children:"PAUSE_ROLE"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function stop()\n"})}),"\n",(0,r.jsx)(n.h3,{id:"resume",children:"resume()"}),"\n",(0,r.jsx)(n.p,{children:"Resume pool routine operations."}),"\n",(0,r.jsxs)(n.p,{children:["Can be called only by the bearer of ",(0,r.jsx)(n.code,{children:"RESUME_ROLE"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function resume()\n"})}),"\n",(0,r.jsx)(n.h3,{id:"pausestaking",children:"pauseStaking()"}),"\n",(0,r.jsx)(n.p,{children:"Stops accepting new ether to the protocol."}),"\n",(0,r.jsxs)(n.p,{children:["Can be called only by the bearer of ",(0,r.jsx)(n.code,{children:"STAKING_PAUSE_ROLE"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function pauseStaking()\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["While accepting new ether is stopped, calls to the ",(0,r.jsx)(n.code,{children:"submit"})," function,\nas well as to the default payable function, will revert."]})}),"\n",(0,r.jsx)(n.h3,{id:"resumestaking",children:"resumeStaking()"}),"\n",(0,r.jsxs)(n.p,{children:["Resumes accepting new ether to the protocol (if ",(0,r.jsx)(n.code,{children:"pauseStaking"})," was called previously)."]}),"\n",(0,r.jsxs)(n.p,{children:["Can be called only by the bearer of ",(0,r.jsx)(n.code,{children:"STAKING_CONTROL_ROLE"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function resumeStaking()\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Staking could be rate-limited by imposing a limit on the stake amount at each moment in time,\nsee ",(0,r.jsx)(n.a,{href:"/contracts/lido#setstakinglimit",children:(0,r.jsx)(n.code,{children:"setStakingLimit()"})})," and ",(0,r.jsx)(n.a,{href:"/contracts/lido#removestakinglimit",children:(0,r.jsx)(n.code,{children:"removeStakingLimit()"})}),"."]})}),"\n",(0,r.jsx)(n.h3,{id:"setstakinglimit",children:"setStakingLimit()"}),"\n",(0,r.jsx)(n.p,{children:"Sets the staking rate limit."}),"\n",(0,r.jsxs)(n.p,{children:["Can be called only by the bearer of ",(0,r.jsx)(n.code,{children:"STAKING_CONTROL_ROLE"})]}),"\n",(0,r.jsx)(n.p,{children:"Limit explanation scheme:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-txt",children:"    * \u25b2 Stake limit\n    * \u2502.....  .....   ........ ...            ....     ... Stake limit = max\n    * \u2502      .       .        .   .   .      .    . . .\n    * \u2502     .       .              . .  . . .      . .\n    * \u2502            .                .  . . .\n    * \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500> Time\n    * \u2502     ^      ^          ^   ^^^  ^ ^ ^     ^^^ ^     Stake events\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function setStakingLimit(uint256 _maxStakeLimit, uint256 _stakeLimitIncreasePerBlock)\n"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_maxStakeLimit"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Max stake limit value"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_stakeLimitIncreasePerBlock"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Stake limit increase per single block"})]})]})]}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.p,{children:"Reverts if:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"_maxStakeLimit"})," == 0"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"_maxStakeLimit"})," >= 2^96"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"_maxStakeLimit"})," < ",(0,r.jsx)(n.code,{children:"_stakeLimitIncreasePerBlock"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"_maxStakeLimit"})," / ",(0,r.jsx)(n.code,{children:"_stakeLimitIncreasePerBlock"})," >= 2^32 (only if ",(0,r.jsx)(n.code,{children:"_stakeLimitIncreasePerBlock"})," != 0)"]}),"\n"]})]}),"\n",(0,r.jsx)(n.h3,{id:"removestakinglimit",children:"removeStakingLimit()"}),"\n",(0,r.jsx)(n.p,{children:"Removes the staking rate limit."}),"\n",(0,r.jsxs)(n.p,{children:["Can be called only by the bearer of ",(0,r.jsx)(n.code,{children:"STAKING_CONTROL_ROLE"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function removeStakingLimit()\n"})}),"\n",(0,r.jsx)(n.h3,{id:"unsafechangedepositedvalidators",children:"unsafeChangeDepositedValidators()"}),"\n",(0,r.jsx)(n.p,{children:"Unsafely change deposited validators counter."}),"\n",(0,r.jsx)(n.p,{children:"The method unsafely changes the deposited validator counter.\nCan be required when onboarding external validators to Lido (i.e., had deposited before and rotated their type-0x00 withdrawal credentials to Lido)."}),"\n",(0,r.jsxs)(n.p,{children:["Can be called only by the bearer of ",(0,r.jsx)(n.code,{children:"UNSAFE_CHANGE_DEPOSITED_VALIDATORS_ROLE"})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_newDepositedValidators"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"New value for the deposited validators counter"})]})})]}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsx)(n.p,{children:"The method might break the internal protocol state if applied incorrectly"})}),"\n",(0,r.jsxs)(n.h2,{id:"erc-20-related-methods",children:[(0,r.jsx)(n.code,{children:"ERC-20"}),"-related Methods"]}),"\n",(0,r.jsx)(n.h3,{id:"name",children:"name()"}),"\n",(0,r.jsx)(n.p,{children:"Returns the name of the token."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function name() view returns (string)\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Always returns ",(0,r.jsx)(n.code,{children:"Liquid staked Ether 2.0"}),"."]})}),"\n",(0,r.jsx)(n.h3,{id:"symbol",children:"symbol()"}),"\n",(0,r.jsx)(n.p,{children:"Returns the symbol of the token."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function symbol() view returns (string)\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Always returns ",(0,r.jsx)(n.code,{children:"stETH"}),"."]})}),"\n",(0,r.jsx)(n.h3,{id:"decimals",children:"decimals()"}),"\n",(0,r.jsx)(n.p,{children:"Returns the number of decimals for getting user representation of a token amount."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function decimals() view returns (uint8)\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Always returns ",(0,r.jsx)(n.code,{children:"18"}),"."]})}),"\n",(0,r.jsx)(n.h3,{id:"totalsupply",children:"totalSupply()"}),"\n",(0,r.jsx)(n.p,{children:"Returns the number of tokens in existence."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function totalSupply() view returns (uint256)\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Always equals to ",(0,r.jsx)(n.code,{children:"getTotalPooledEther()"})," since the token amount\nis pegged to the total amount of ether controlled by the protocol."]})}),"\n",(0,r.jsx)(n.h3,{id:"balanceof",children:"balanceOf()"}),"\n",(0,r.jsxs)(n.p,{children:["Returns the number of tokens owned by the ",(0,r.jsx)(n.code,{children:"_account"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function balanceOf(address _account) view returns (uint256)\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Balances are dynamic and equal the ",(0,r.jsx)(n.code,{children:"_account"}),"'s share in the amount of\ntotal ether controlled by the protocol. See ",(0,r.jsx)(n.a,{href:"/contracts/lido#sharesof",children:(0,r.jsx)(n.code,{children:"sharesOf"})}),"."]})}),"\n",(0,r.jsx)(n.h3,{id:"allowance",children:"allowance()"}),"\n",(0,r.jsxs)(n.p,{children:["Returns the remaining number of tokens that ",(0,r.jsx)(n.code,{children:"_spender"})," is allowed to spend\non behalf of ",(0,r.jsx)(n.code,{children:"_owner"})," through ",(0,r.jsx)(n.code,{children:"transferFrom()"}),". This is zero by default."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function allowance(address _owner, address _spender) view returns (uint256)\n"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_owner"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"address"})}),(0,r.jsx)(n.td,{children:"Address of owner"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_spender"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"address"})}),(0,r.jsx)(n.td,{children:"Address of spender"})]})]})]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["This value changes when ",(0,r.jsx)(n.code,{children:"approve()"})," or ",(0,r.jsx)(n.code,{children:"transferFrom()"})," is called unless the allowance is infinite (2^256)"]})}),"\n",(0,r.jsx)(n.h3,{id:"approve",children:"approve()"}),"\n",(0,r.jsxs)(n.p,{children:["Sets ",(0,r.jsx)(n.code,{children:"_amount"})," as the allowance of ",(0,r.jsx)(n.code,{children:"_spender"})," over the caller's tokens"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function approve(address _spender, uint256 _amount) returns (bool)\n"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_spender"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"address"})}),(0,r.jsx)(n.td,{children:"Address of spender"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_amount"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Amount of tokens"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Returns a boolean value indicating whether the operation succeeded."}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.p,{children:"Requirements:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"_spender"})," cannot be the zero address."]}),"\n",(0,r.jsx)(n.li,{children:"the contract must not be paused."}),"\n"]})]}),"\n",(0,r.jsx)(n.h3,{id:"increaseallowance",children:"increaseAllowance()"}),"\n",(0,r.jsxs)(n.p,{children:["Atomically increases the allowance granted to ",(0,r.jsx)(n.code,{children:"_spender"})," by the caller by ",(0,r.jsx)(n.code,{children:"_addedValue"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["This is an alternative to ",(0,r.jsx)(n.code,{children:"approve()"})," that can be used as a mitigation for problems described ",(0,r.jsx)(n.a,{href:"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol#L42",children:"here"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function increaseAllowance(address _spender, uint256 _addedValue) returns (bool)\n"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_sender"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"address"})}),(0,r.jsx)(n.td,{children:"Address of spender"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_addedValue"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Amount of tokens to increase allowance"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Returns a boolean value indicating whether the operation succeeded"}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.p,{children:"Requirements:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"_spender"})," address cannot be zero."]}),"\n",(0,r.jsx)(n.li,{children:"the contract must not be paused."}),"\n"]})]}),"\n",(0,r.jsx)(n.h3,{id:"decreaseallowance",children:"decreaseAllowance()"}),"\n",(0,r.jsxs)(n.p,{children:["Atomically decreases the allowance granted to ",(0,r.jsx)(n.code,{children:"_spender"})," by the caller by ",(0,r.jsx)(n.code,{children:"_subtractedValue"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["This is an alternative to ",(0,r.jsx)(n.code,{children:"approve()"})," that can be used as a mitigation for\nproblems described ",(0,r.jsx)(n.a,{href:"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol#L42",children:"here"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function decreaseAllowance(address _spender, uint256 _subtractedValue) returns (bool)\n"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_sender"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"address"})}),(0,r.jsx)(n.td,{children:"Address of spender"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_subtractedValue"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Amount of tokens to decrease allowance"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Returns a boolean value indicating whether the operation succeeded."}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.p,{children:"Requirements:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"_spender"})," cannot be the zero address."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"_spender"})," must have an allowance for the caller of at least ",(0,r.jsx)(n.code,{children:"_subtractedValue"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"the contract must not be paused."}),"\n"]})]}),"\n",(0,r.jsx)(n.h3,{id:"transfer",children:"transfer()"}),"\n",(0,r.jsxs)(n.p,{children:["Moves ",(0,r.jsx)(n.code,{children:"_amount"})," tokens from the caller's account to the ",(0,r.jsx)(n.code,{children:"_recipient"})," account."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function transfer(address _recipient, uint256 _amount) returns (bool)\n"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_recipient"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"address"})}),(0,r.jsx)(n.td,{children:"Address of tokens recipient"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_amount"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Amount of tokens to transfer"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Returns a boolean value indicating whether the operation succeeded."}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.p,{children:"Requirements:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"_recipient"})," cannot be the zero address or stETH contract itself."]}),"\n",(0,r.jsxs)(n.li,{children:["the caller must have a balance of at least ",(0,r.jsx)(n.code,{children:"_amount"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"the contract must not be paused."}),"\n"]})]}),"\n",(0,r.jsx)(n.h3,{id:"transferfrom",children:"transferFrom()"}),"\n",(0,r.jsxs)(n.p,{children:["Moves ",(0,r.jsx)(n.code,{children:"_amount"})," tokens from ",(0,r.jsx)(n.code,{children:"_sender"})," to ",(0,r.jsx)(n.code,{children:"_recipient"})," using the\nallowance mechanism. ",(0,r.jsx)(n.code,{children:"_amount"})," is then deducted from the caller's\nallowance."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function transferFrom(\n    address _sender,\n    address _recipient,\n    uint256 _amount\n) returns (bool)\n"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_sender"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"address"})}),(0,r.jsx)(n.td,{children:"Address of spender"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_recipient"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"address"})}),(0,r.jsx)(n.td,{children:"Address of recipient"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_amount"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Amount of tokens"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Returns a boolean value indicating whether the operation succeeded."}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.p,{children:"Requirements:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"_sender"})," cannot be the zero addresses."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"_recipient"})," cannot be the zero address or stETH contract itself."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"_sender"})," must have a balance of at least ",(0,r.jsx)(n.code,{children:"_amount"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["the caller must have an allowance for ",(0,r.jsx)(n.code,{children:"_sender"}),"'s tokens of at least ",(0,r.jsx)(n.code,{children:"_amount"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"the contract must not be paused."}),"\n"]})]}),"\n",(0,r.jsx)(n.h2,{id:"shares-related-methods",children:"Shares-related Methods"}),"\n",(0,r.jsx)(n.h3,{id:"gettotalshares",children:"getTotalShares()"}),"\n",(0,r.jsx)(n.p,{children:"Returns the total amount of shares in existence."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function getTotalShares() view returns (uint256)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"sharesof",children:"sharesOf()"}),"\n",(0,r.jsxs)(n.p,{children:["Returns the number of shares owned by ",(0,r.jsx)(n.code,{children:"_account"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function sharesOf(address _account) view returns (uint256)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"getsharesbypooledeth",children:"getSharesByPooledEth()"}),"\n",(0,r.jsxs)(n.p,{children:["Returns the number of shares that corresponds to ",(0,r.jsx)(n.code,{children:"_ethAmount"})," of the protocol-controlled ether."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function getSharesByPooledEth(uint256 _ethAmount) view returns (uint256)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"getpooledethbyshares",children:"getPooledEthByShares()"}),"\n",(0,r.jsxs)(n.p,{children:["Returns the amount of ether that corresponds to ",(0,r.jsx)(n.code,{children:"_sharesAmount"})," token shares."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function getPooledEthByShares(uint256 _sharesAmount) view returns (uint256)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"transfershares",children:"transferShares()"}),"\n",(0,r.jsx)(n.p,{children:"Moves token shares from the caller's account to the provided recipient account."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function transferShares(address _recipient, uint256 _sharesAmount) returns (uint256)\n"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_recipient"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"address"})}),(0,r.jsx)(n.td,{children:"Address of shares recipient"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_sharesAmount"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Amount of shares to transfer"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Returns the number Amount of transferred tokens."}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.p,{children:"Requirements:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"_recipient"})," cannot be the zero address or stETH contract itself."]}),"\n",(0,r.jsxs)(n.li,{children:["the caller must have at least ",(0,r.jsx)(n.code,{children:"_sharesAmount"})," shares."]}),"\n",(0,r.jsx)(n.li,{children:"the contract must not be paused."}),"\n"]})]}),"\n",(0,r.jsx)(n.h3,{id:"transfersharesfrom",children:"transferSharesFrom()"}),"\n",(0,r.jsxs)(n.p,{children:["Moves ",(0,r.jsx)(n.code,{children:"_sharesAmount"})," token shares from the ",(0,r.jsx)(n.code,{children:"_sender"})," account to the ",(0,r.jsx)(n.code,{children:"_recipient"})," using the allowance mechanism. The amount of tokens equivalent to ",(0,r.jsx)(n.code,{children:"_sharesAmount"})," is then deducted from the caller's allowance."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function transferSharesFrom(\n    address _sender,\n    address _recipient,\n    uint256 _sharesAmount\n) returns (uint256)\n"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_sender"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"address"})}),(0,r.jsx)(n.td,{children:"Address of spender"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_recipient"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"address"})}),(0,r.jsx)(n.td,{children:"Address of recipient"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_sharesAmount"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Amount of shares"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Returns the number of transferred tokens."}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.p,{children:"Requirements:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"_sender"})," cannot be the zero address."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"_recipient"})," cannot be the zero address or stETH contract itself."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"_sender"})," must have at least ",(0,r.jsx)(n.code,{children:"_sharesAmount"})," shares."]}),"\n",(0,r.jsxs)(n.li,{children:["the caller must have an allowance for ",(0,r.jsx)(n.code,{children:"_sender"}),"'s tokens of at least ",(0,r.jsx)(n.code,{children:"getPooledEthByShares(_sharesAmount)"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"the contract must not be paused."}),"\n"]})]}),"\n",(0,r.jsxs)(n.h2,{id:"erc-2612-related-methods",children:[(0,r.jsx)(n.code,{children:"ERC-2612"}),"-related methods"]}),"\n",(0,r.jsx)(n.h3,{id:"nonces",children:"nonces()"}),"\n",(0,r.jsxs)(n.p,{children:["Returns the current nonce for the ",(0,r.jsx)(n.code,{children:"owner"}),". This value must be included whenever a signature is generated for an ERC-2612 permit."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function nonces(address owner) view returns (uint256)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"domain_separator",children:"DOMAIN_SEPARATOR()"}),"\n",(0,r.jsx)(n.p,{children:"Returns the domain separator used in the encoding of the signature for the ERC-2612 permit, as defined by EIP-712."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function DOMAIN_SEPARATOR() view returns (bytes32)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"permit",children:"permit()"}),"\n",(0,r.jsxs)(n.p,{children:["Sets ",(0,r.jsx)(n.code,{children:"value"})," as the allowance of ",(0,r.jsx)(n.code,{children:"spender"})," over ",(0,r.jsx)(n.code,{children:"owner"}),"'s tokens, given ",(0,r.jsx)(n.code,{children:"owner"}),"'s signed approval."]}),"\n",(0,r.jsx)(n.p,{children:"Emits an Approval event."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)\n"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"owner"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"address"})}),(0,r.jsx)(n.td,{children:"Address of spender"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"spender"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"address"})}),(0,r.jsx)(n.td,{children:"Address of recipient"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"value"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Allowance to set"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"deadline"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint256"})}),(0,r.jsx)(n.td,{children:"Permit expiry time"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"v"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint8"})}),(0,r.jsxs)(n.td,{children:["extended ",(0,r.jsx)(n.code,{children:"secp256k1"})," signature"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"r"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"bytes32"})}),(0,r.jsxs)(n.td,{children:["extended ",(0,r.jsx)(n.code,{children:"secp256k1"})," signature"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"s"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"bytes32"})}),(0,r.jsxs)(n.td,{children:["extended ",(0,r.jsx)(n.code,{children:"secp256k1"})," signature"]})]})]})]}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.p,{children:"Requirements:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"spender"})," cannot be the zero address."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"deadline"})," must be a timestamp in the future."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"v"}),", ",(0,r.jsx)(n.code,{children:"r"})," and ",(0,r.jsx)(n.code,{children:"s"})," must be a valid ",(0,r.jsx)(n.code,{children:"secp256k1"})," signature from ",(0,r.jsx)(n.code,{children:"owner"}),"\nover the EIP712-formatted function arguments."]}),"\n",(0,r.jsxs)(n.li,{children:["the signature must use ",(0,r.jsx)(n.code,{children:"owner"}),"'s current nonce (see ",(0,r.jsx)(n.code,{children:"nonces"}),")."]}),"\n"]})]}),"\n",(0,r.jsxs)(n.h2,{id:"erc-712-related-methods",children:[(0,r.jsx)(n.code,{children:"ERC-712"}),"-related methods"]}),"\n",(0,r.jsx)(n.h3,{id:"eip712domain",children:"eip712Domain()"}),"\n",(0,r.jsx)(n.p,{children:"Returns the fields and values that describe the domain separator used by this contract for EIP-712"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function eip712Domain() view returns (\n    string name,\n    string version,\n    uint256 chainId,\n    address verifyingContract\n)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"general-methods",children:"General Methods"}),"\n",(0,r.jsx)(n.h3,{id:"getlidolocator",children:"getLidoLocator()"}),"\n",(0,r.jsxs)(n.p,{children:["Returns the address of ",(0,r.jsx)(n.a,{href:"/lido-docs-spanish/contracts/lido-locator",children:"LidoLocator"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function getLidoLocator() view returns (address)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"getcontractversion",children:"getContractVersion()"}),"\n",(0,r.jsx)(n.p,{children:"Returns the current contract version."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function getContractVersion() view returns (uint256)\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Always returns ",(0,r.jsx)(n.code,{children:"2"}),"."]})}),"\n",(0,r.jsx)(n.h3,{id:"transfertovault",children:"transferToVault()"}),"\n",(0,r.jsx)(n.p,{children:"Overrides default AragonApp behavior to disallow recovery."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sol",children:"function transferToVault(address _token)\n"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_token"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"address"})}),(0,r.jsx)(n.td,{children:"Token to be sent to recovery vault"})]})})]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Always reverts with ",(0,r.jsx)(n.code,{children:"NOT_SUPPORTED"})," reason"]})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>l});var r=s(6540);const t={},d=r.createContext(t);function i(e){const n=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);