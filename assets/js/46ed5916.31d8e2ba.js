"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8357],{7747:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var i=n(4848),s=n(8453);const r={},a="OracleReportSanityChecker",l={id:"contracts/oracle-report-sanity-checker",title:"OracleReportSanityChecker",description:"- Source code",source:"@site/docs/contracts/oracle-report-sanity-checker.md",sourceDirName:"contracts",slug:"/contracts/oracle-report-sanity-checker",permalink:"/contracts/oracle-report-sanity-checker",draft:!1,unlisted:!1,editUrl:"https://github.com/adminseedlatam/lido-docs-spanish/edit/main/docs/contracts/oracle-report-sanity-checker.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"LegacyOracle",permalink:"/contracts/legacy-oracle"},next:{title:"OracleDaemonConfig",permalink:"/contracts/oracle-daemon-config"}},c={},o=[{value:"Limits List",id:"limits-list",level:2},{value:"Sanity Checks",id:"sanity-checks",level:2},{value:"checkAccountingOracleReport()",id:"checkaccountingoraclereport",level:3},{value:"Arguments",id:"arguments",level:4},{value:"checkExitBusOracleReport()",id:"checkexitbusoraclereport",level:3},{value:"Arguments",id:"arguments-1",level:4},{value:"checkExitedValidatorsRatePerDay()",id:"checkexitedvalidatorsrateperday",level:3},{value:"Arguments",id:"arguments-2",level:4},{value:"checkNodeOperatorsPerExtraDataItemCount()",id:"checknodeoperatorsperextradataitemcount",level:3},{value:"Arguments",id:"arguments-3",level:4},{value:"checkAccountingExtraDataListItemsCount()",id:"checkaccountingextradatalistitemscount",level:3},{value:"Arguments",id:"arguments-4",level:4},{value:"checkWithdrawalQueueOracleReport()",id:"checkwithdrawalqueueoraclereport",level:3},{value:"Arguments",id:"arguments-5",level:4},{value:"checkSimulatedShareRate()",id:"checksimulatedsharerate",level:3},{value:"Arguments",id:"arguments-6",level:4},{value:"View Methods",id:"view-methods",level:2},{value:"getLidoLocator()",id:"getlidolocator",level:3},{value:"getOracleReportLimits()",id:"getoraclereportlimits",level:3},{value:"getMaxPositiveTokenRebase()",id:"getmaxpositivetokenrebase",level:3},{value:"smoothenTokenRebase()",id:"smoothentokenrebase",level:3},{value:"Arguments",id:"arguments-7",level:4},{value:"Returns",id:"returns",level:4},{value:"Lever Methods",id:"lever-methods",level:2},{value:"setOracleReportLimits()",id:"setoraclereportlimits",level:3},{value:"Arguments",id:"arguments-8",level:4},{value:"setChurnValidatorsPerDayLimit()",id:"setchurnvalidatorsperdaylimit",level:3},{value:"Arguments",id:"arguments-9",level:4},{value:"setOneOffCLBalanceDecreaseBPLimit()",id:"setoneoffclbalancedecreasebplimit",level:3},{value:"Arguments",id:"arguments-10",level:4},{value:"setAnnualBalanceIncreaseBPLimit()",id:"setannualbalanceincreasebplimit",level:3},{value:"Arguments",id:"arguments-11",level:4},{value:"setSimulatedShareRateDeviationBPLimit()",id:"setsimulatedshareratedeviationbplimit",level:3},{value:"Arguments",id:"arguments-12",level:4},{value:"setMaxExitRequestsPerOracleReport()",id:"setmaxexitrequestsperoraclereport",level:3},{value:"Arguments",id:"arguments-13",level:4},{value:"setRequestTimestampMargin()",id:"setrequesttimestampmargin",level:3},{value:"Arguments",id:"arguments-14",level:4},{value:"setMaxPositiveTokenRebase()",id:"setmaxpositivetokenrebase",level:3},{value:"Arguments",id:"arguments-15",level:4},{value:"setMaxAccountingExtraDataListItemsCount()",id:"setmaxaccountingextradatalistitemscount",level:3},{value:"Arguments",id:"arguments-16",level:4},{value:"setMaxNodeOperatorsPerExtraDataItemCount()",id:"setmaxnodeoperatorsperextradataitemcount",level:3},{value:"Arguments",id:"arguments-17",level:4},{value:"Permissions",id:"permissions",level:2},{value:"ALL_LIMITS_MANAGER_ROLE()",id:"all_limits_manager_role",level:3},{value:"CHURN_VALIDATORS_PER_DAY_LIMIT_MANAGER_ROLE()",id:"churn_validators_per_day_limit_manager_role",level:3},{value:"ONE_OFF_CL_BALANCE_DECREASE_LIMIT_MANAGER_ROLE()",id:"one_off_cl_balance_decrease_limit_manager_role",level:3},{value:"ANNUAL_BALANCE_INCREASE_LIMIT_MANAGER_ROLE()",id:"annual_balance_increase_limit_manager_role",level:3},{value:"SHARE_RATE_DEVIATION_LIMIT_MANAGER_ROLE()",id:"share_rate_deviation_limit_manager_role",level:3},{value:"MAX_VALIDATOR_EXIT_REQUESTS_PER_REPORT_ROLE()",id:"max_validator_exit_requests_per_report_role",level:3},{value:"MAX_ACCOUNTING_EXTRA_DATA_LIST_ITEMS_COUNT_ROLE()",id:"max_accounting_extra_data_list_items_count_role",level:3},{value:"MAX_NODE_OPERATORS_PER_EXTRA_DATA_ITEM_COUNT_ROLE()",id:"max_node_operators_per_extra_data_item_count_role",level:3},{value:"REQUEST_TIMESTAMP_MARGIN_MANAGER_ROLE()",id:"request_timestamp_margin_manager_role",level:3},{value:"MAX_POSITIVE_TOKEN_REBASE_MANAGER_ROLE()",id:"max_positive_token_rebase_manager_role",level:3},{value:"Events",id:"events",level:2},{value:"ChurnValidatorsPerDayLimitSet()",id:"churnvalidatorsperdaylimitset",level:3},{value:"Arguments",id:"arguments-18",level:4},{value:"OneOffCLBalanceDecreaseBPLimitSet()",id:"oneoffclbalancedecreasebplimitset",level:3},{value:"Arguments",id:"arguments-19",level:4},{value:"AnnualBalanceIncreaseBPLimitSet()",id:"annualbalanceincreasebplimitset",level:3},{value:"Arguments",id:"arguments-20",level:4},{value:"SimulatedShareRateDeviationBPLimitSet()",id:"simulatedshareratedeviationbplimitset",level:3},{value:"Arguments",id:"arguments-21",level:4},{value:"MaxPositiveTokenRebaseSet()",id:"maxpositivetokenrebaseset",level:3},{value:"Arguments",id:"arguments-22",level:4},{value:"MaxValidatorExitRequestsPerReportSet()",id:"maxvalidatorexitrequestsperreportset",level:3},{value:"Arguments",id:"arguments-23",level:4},{value:"MaxAccountingExtraDataListItemsCountSet()",id:"maxaccountingextradatalistitemscountset",level:3},{value:"Arguments",id:"arguments-24",level:4},{value:"MaxNodeOperatorsPerExtraDataItemCountSet()",id:"maxnodeoperatorsperextradataitemcountset",level:3},{value:"Arguments",id:"arguments-25",level:4},{value:"RequestTimestampMarginSet()",id:"requesttimestampmarginset",level:3},{value:"Arguments",id:"arguments-26",level:4}];function d(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"oraclereportsanitychecker",children:"OracleReportSanityChecker"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://github.com/lidofinance/lido-dao/blob/master/contracts/0.8.9/sanity_checks/OracleReportSanityChecker.sol",children:"Source code"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://etherscan.io/address/0x9305c1Dbfe22c12c66339184C0025d7006f0f1cC",children:"Deployed contract"})}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Some vital data for the Lido protocol is collected off-chain and delivered on-chain via Oracle contracts:\n",(0,i.jsx)(t.a,{href:"/contracts/accounting-oracle",children:(0,i.jsx)(t.code,{children:"AccountingOracle"})}),", ",(0,i.jsx)(t.a,{href:"/contracts/validators-exit-bus-oracle",children:(0,i.jsx)(t.code,{children:"ValidatorsExitBusOracle"})}),".\nDue to the high impact of data provided by the Oracles on the state of the protocol, each Oracle's\nreport passes a set of onchain\n",(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Sanity_check",children:"sanity checks"}),".\nFor the simplicity of the contracts responsible for handling Oracle's reports, all sanity checks were collected in the\nstandalone ",(0,i.jsx)(t.code,{children:"OracleReportSanityChecker"})," contract."]}),"\n",(0,i.jsxs)(t.p,{children:["Besides the validation methods, the ",(0,i.jsx)(t.code,{children:"OracleReportSanityChecker"})," contract contains a ",(0,i.jsx)(t.a,{href:"#limits-list",children:"set of tunable limits and restrictions"}),"\nused during the report validation process.\nTo configure the limits values contract provides the lever methods described in the ",(0,i.jsx)(t.a,{href:"#lever-methods",children:"standalone section"}),".\nAccess to lever methods is restricted using the functionality of the\n",(0,i.jsx)(t.a,{href:"https://github.com/lidofinance/lido-dao/blob/master/contracts/0.8.9/utils/access/AccessControlEnumerable.sol",children:"AccessControlEnumerable"}),"\ncontract and a bunch of ",(0,i.jsx)(t.a,{href:"#permissions",children:"granular roles"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"limits-list",children:"Limits List"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"OracleReportSanityChecker"})," introduces a new type ",(0,i.jsx)(t.code,{children:"LimitsList"})," which contains all the limits used by the contract."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"struct LimitsList {\n    uint256 churnValidatorsPerDayLimit;\n    uint256 oneOffCLBalanceDecreaseBPLimit;\n    uint256 annualBalanceIncreaseBPLimit;\n    uint256 simulatedShareRateDeviationBPLimit;\n    uint256 maxValidatorExitRequestsPerReport;\n    uint256 maxAccountingExtraDataListItemsCount;\n    uint256 maxNodeOperatorsPerExtraDataItemCount;\n    uint256 requestTimestampMargin;\n    uint256 maxPositiveTokenRebase;\n}\n"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsxs)(t.strong,{children:[(0,i.jsx)(t.code,{children:"churnValidatorsPerDayLimit"})," \u2208 [0, 65535]"]})," \u2014 the max possible number of validators that might been reported as ",(0,i.jsx)(t.em,{children:(0,i.jsx)(t.strong,{children:"appeared"})}),"\nor ",(0,i.jsx)(t.em,{children:(0,i.jsx)(t.strong,{children:"exited"})})," during a single day. ",(0,i.jsx)(t.a,{href:"/contracts/accounting-oracle",children:(0,i.jsx)(t.code,{children:"AccountingOracle"})})," reports validators as ",(0,i.jsx)(t.em,{children:(0,i.jsx)(t.strong,{children:"appeared"})})," once them become\n",(0,i.jsx)(t.em,{children:(0,i.jsx)(t.strong,{children:"pending"})})," (might be not ",(0,i.jsx)(t.em,{children:(0,i.jsx)(t.strong,{children:"activated"})})," yet). Thus, this limit should be high enough for such cases because Consensus Layer has no\nintrinsic churn limit for the amount of ",(0,i.jsx)(t.em,{children:(0,i.jsx)(t.strong,{children:"pending"})})," validators (only for ",(0,i.jsx)(t.em,{children:(0,i.jsx)(t.strong,{children:"activated"})})," instead).\nFor Lido it's limited by the max daily deposits via ",(0,i.jsx)(t.a,{href:"/contracts/deposit-security-module",children:(0,i.jsx)(t.code,{children:"DepositSecurityModule"})}),". In contrast, ",(0,i.jsx)(t.em,{children:(0,i.jsx)(t.strong,{children:"exited"})})," are reported according to the\n",(0,i.jsx)(t.a,{href:"https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#get_validator_churn_limit",children:"Consensus Layer churn limit"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsxs)(t.strong,{children:[(0,i.jsx)(t.code,{children:"oneOffCLBalanceDecreaseBPLimit"})," \u2208 [0, 10000]"]})," \u2014 the max decrease of the total validators' balances on the Consensus Layer since\nthe previous oracle report. Represented in the ",(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Basis_point",children:"Basis Points"})," (100% == 10000)."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsxs)(t.strong,{children:[(0,i.jsx)(t.code,{children:"annualBalanceIncreaseBPLimit"})," \u2208 [0, 10000]"]})," \u2014 the max annual increase of the total validators' balances on the Consensus Layer\nsince the previous oracle report. Represented in the ",(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Basis_point",children:"Basis Points"})," (100% == 10000)."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsxs)(t.strong,{children:[(0,i.jsx)(t.code,{children:"simulatedShareRateDeviationBPLimit"})," \u2208 [0, 10000]"]})," \u2014 the max deviation of the provided ",(0,i.jsx)(t.code,{children:"simulatedShareRate"})," and the actual one within the\ncurrently processing oracle report. Represented in the ",(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Basis_point",children:"Basis Points"})," (100% == 10000)."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsxs)(t.strong,{children:[(0,i.jsx)(t.code,{children:"maxValidatorExitRequestsPerReport"})," \u2208 [0, 65535]"]})," \u2014 the max number of exit requests allowed in report\nto ",(0,i.jsx)(t.a,{href:"/contracts/validators-exit-bus-oracle",children:"ValidatorsExitBusOracle"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsxs)(t.strong,{children:[(0,i.jsx)(t.code,{children:"maxAccountingExtraDataListItemsCount"})," \u2208 [0, 65535]"]})," \u2014 the max number of data list items reported to accounting oracle in extra data"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsxs)(t.strong,{children:[(0,i.jsx)(t.code,{children:"maxNodeOperatorsPerExtraDataItemCount"})," \u2208 [0, 65535]"]})," \u2014 the max number of node operators reported per extra data list item"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsxs)(t.strong,{children:[(0,i.jsx)(t.code,{children:"requestTimestampMargin"})," \u2208 [0, type(uint64).max]"]})," \u2014 the min time required to be passed from the creation of the request to be finalized till the time of the oracle report"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsxs)(t.strong,{children:[(0,i.jsx)(t.code,{children:"maxPositiveTokenRebase"})," \u2208 [1, type(uint64).max]"]})," \u2014 the max positive token rebase allowed per single oracle report token rebase\nhappens on total supply adjustment, huge positive rebase can incur oracle report sandwiching.\nUses 1e9 precision, e.g.: ",(0,i.jsx)(t.code,{children:"1e6"})," \u2014 0.1%; ",(0,i.jsx)(t.code,{children:"1e9"})," \u2014 100%; ",(0,i.jsx)(t.code,{children:"type(uint64).max"})," \u2014 unlimited rebase."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"sanity-checks",children:"Sanity Checks"}),"\n",(0,i.jsx)(t.h3,{id:"checkaccountingoraclereport",children:"checkAccountingOracleReport()"}),"\n",(0,i.jsx)(t.p,{children:"Applies sanity checks to the accounting parameters of Lido's Oracle report."}),"\n",(0,i.jsxs)(t.admonition,{type:"note",children:[(0,i.jsx)(t.p,{children:"Below is the list of restrictions checked by the method execution:"}),(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Revert with ",(0,i.jsx)(t.code,{children:"IncorrectWithdrawalsVaultBalance(uint256 actualWithdrawalVaultBalance)"})," error when the reported withdrawals\nvault balance ",(0,i.jsx)(t.strong,{children:"is greater than"})," the actual balance of the withdrawal vault."]}),"\n",(0,i.jsxs)(t.li,{children:["Revert with ",(0,i.jsx)(t.code,{children:"IncorrectELRewardsVaultBalance(uint256 actualELRewardsVaultBalance)"})," error when reported EL rewards vault\nbalance ",(0,i.jsx)(t.strong,{children:"is greater than"})," the actual balance of EL rewards vault."]}),"\n",(0,i.jsxs)(t.li,{children:["Revert with ",(0,i.jsx)(t.code,{children:"IncorrectSharesRequestedToBurn(uint256 actualSharesToBurn)"})," error when the amount of stETH shares requested\nto burn ",(0,i.jsx)(t.strong,{children:"exceeds"})," the number of shares marked to be burned in the Burner contract."]}),"\n",(0,i.jsxs)(t.li,{children:["Revert with ",(0,i.jsx)(t.code,{children:"IncorrectCLBalanceDecrease(uint256 oneOffCLBalanceDecreaseBP)"})," error when Consensus Layer one-off balance\ndecrease in basis points ",(0,i.jsx)(t.strong,{children:"exceeds"})," the allowed ",(0,i.jsx)(t.code,{children:"LimitsList.oneOffCLBalanceDecreaseBPLimit"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["Revert with ",(0,i.jsx)(t.code,{children:"IncorrectCLBalanceIncrease(uint256 annualBalanceDiff)"})," error when Consensus Layer annual balance increase\nexpressed in basis points ",(0,i.jsx)(t.strong,{children:"exceeds"})," allowed ",(0,i.jsx)(t.code,{children:"LimitsList.annualBalanceIncreaseBPLimit"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["Revert with ",(0,i.jsx)(t.code,{children:"IncorrectAppearedValidators(uint256 churnLimit)"})," error when the number of appeared validators ",(0,i.jsx)(t.strong,{children:"exceeds"}),"\nthe limit set by ",(0,i.jsx)(t.code,{children:"LimitsList.churnValidatorsPerDayLimit"}),"."]}),"\n"]})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"function checkAccountingOracleReport(\n    uint256 _timeElapsed,\n    uint256 _preCLBalance,\n    uint256 _postCLBalance,\n    uint256 _withdrawalVaultBalance,\n    uint256 _elRewardsVaultBalance,\n    uint256 _sharesRequestedToBurn,\n    uint256 _preCLValidators,\n    uint256 _postCLValidators\n)\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_timeElapsed"})})," \u2014 time elapsed since the previous oracle report, measured in ",(0,i.jsx)(t.strong,{children:"seconds"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_preCLBalance"})})," \u2014 sum of all Lido validators' balances on the Consensus Layer before the current oracle report\n(NB: also include the initial balance of newly appeared validators)"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_postCLBalance"})})," \u2014 sum of all Lido validators' balances on the Consensus Layer after the current oracle report"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_withdrawalVaultBalance"})})," \u2014 withdrawal vault balance on Execution Layer for the report reference slot"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_elRewardsVaultBalance"})})," \u2014 el rewards vault balance on Execution Layer for the report reference slot"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_sharesRequestedToBurn"})})," \u2014 shares requested to burn for the report reference slot"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_preCLValidators"})})," \u2014 Lido-participating validators on the CL side before the current oracle report"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_postCLValidators"})})," \u2014 Lido-participating validators on the CL side after the current oracle report"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"checkexitbusoraclereport",children:"checkExitBusOracleReport()"}),"\n",(0,i.jsxs)(t.p,{children:["Validates that number of exit requests does not exceed the limit set by ",(0,i.jsx)(t.code,{children:"LimitsList.maxValidatorExitRequestsPerReport"}),"."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["Reverts with ",(0,i.jsx)(t.code,{children:"IncorrectNumberOfExitRequestsPerReport(uint256 maxRequestsCount)"})," error when check is failed."]})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"function checkExitBusOracleReport(uint256 _exitRequestsCount)\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-1",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_exitRequestsCount"})})," \u2014 number of validator exit requests supplied per oracle report"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"checkexitedvalidatorsrateperday",children:"checkExitedValidatorsRatePerDay()"}),"\n",(0,i.jsxs)(t.p,{children:["Validates that number of exited validators does not exceed the limit set by ",(0,i.jsx)(t.code,{children:"LimitsList.churnValidatorsPerDayLimit"}),"."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["Reverts with ",(0,i.jsx)(t.code,{children:"ExitedValidatorsLimitExceeded(uint256 limitPerDay, uint256 exitedPerDay)"})," error when check is failed."]})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"function checkExitedValidatorsRatePerDay(uint256 _exitedValidatorsCount)\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-2",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_exitedValidatorsCount"})})," \u2014 number of validator exit requests supplied per oracle report"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"checknodeoperatorsperextradataitemcount",children:"checkNodeOperatorsPerExtraDataItemCount()"}),"\n",(0,i.jsxs)(t.p,{children:["Validates that number of node operators reported per extra data item does not exceed the limit\nset by ",(0,i.jsx)(t.code,{children:"LimitsList.maxNodeOperatorsPerExtraDataItemCount"}),"."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["Reverts with ",(0,i.jsx)(t.code,{children:"TooManyNodeOpsPerExtraDataItem(uint256 itemIndex, uint256 nodeOpsCount)"})," error when check is failed."]})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"function checkNodeOperatorsPerExtraDataItemCount(\n    uint256 _itemIndex,\n    uint256 _nodeOperatorsCount\n)\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-3",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_itemIndex"})})," \u2014 index of item in extra data"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_nodeOperatorsCount"})})," \u2014 number of validator exit requests supplied per oracle report"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"checkaccountingextradatalistitemscount",children:"checkAccountingExtraDataListItemsCount()"}),"\n",(0,i.jsxs)(t.p,{children:["Validates that number of extra data items in the report does not exceed the limit\nset by ",(0,i.jsx)(t.code,{children:"LimitsList.maxAccountingExtraDataListItemsCount"}),"."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["Reverts with ",(0,i.jsx)(t.code,{children:"MaxAccountingExtraDataItemsCountExceeded(uint256 maxItemsCount, uint256 receivedItemsCount)"})," error when check is failed."]})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"function checkAccountingExtraDataListItemsCount(uint256 _extraDataListItemsCount)\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-4",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_extraDataListItemsCount"})})," \u2014 number of validator exit requests supplied per oracle report"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"checkwithdrawalqueueoraclereport",children:"checkWithdrawalQueueOracleReport()"}),"\n",(0,i.jsxs)(t.p,{children:["Validates that withdrawal request with the passed ",(0,i.jsx)(t.code,{children:"_lastFinalizableRequestId"})," was created more\nthan ",(0,i.jsx)(t.code,{children:"LimitsList.requestTimestampMargin"})," seconds ago."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["Reverts with ",(0,i.jsx)(t.code,{children:"IncorrectRequestFinalization(uint256 requestCreationBlock)"})," error when check is failed."]})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"function checkWithdrawalQueueOracleReport(\n    uint256 _lastFinalizableRequestId,\n    uint256 _reportTimestamp\n)\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-5",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_lastFinalizableRequestId"})})," \u2014 last finalizable withdrawal request id"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_reportTimestamp"})})," \u2014 timestamp when the originated oracle report was submitted"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"checksimulatedsharerate",children:"checkSimulatedShareRate()"}),"\n",(0,i.jsx)(t.p,{children:"Applies sanity checks to the simulated share rate for withdrawal requests finalization."}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["Reverts with ",(0,i.jsx)(t.code,{children:"IncorrectSimulatedShareRate(uint256 simulatedShareRate, uint256 actualShareRate)"})," error\nwhen simulated share rate deviation exceeds the limit set by ",(0,i.jsx)(t.code,{children:"LimitsList.simulatedShareRateDeviationBPLimit"})]})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"function checkSimulatedShareRate(\n    uint256 _postTotalPooledEther,\n    uint256 _postTotalShares,\n    uint256 _etherLockedOnWithdrawalQueue,\n    uint256 _sharesBurntDueToWithdrawals,\n    uint256 _simulatedShareRate\n)\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-6",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_postTotalPooledEther"})})," \u2014 total pooled ether after report applied"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_postTotalShares"})})," \u2014 total shares after report applied"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_etherLockedOnWithdrawalQueue"})})," \u2014 ether locked on withdrawal queue for the current oracle report"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_sharesBurntDueToWithdrawals"})})," \u2014 shares burnt due to withdrawals finalization"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_simulatedShareRate"})}),' \u2014 share rate provided with the oracle report (simulated via off-chain "eth_call")']}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"view-methods",children:"View Methods"}),"\n",(0,i.jsx)(t.h3,{id:"getlidolocator",children:"getLidoLocator()"}),"\n",(0,i.jsxs)(t.p,{children:["Returns the address of the protocol-wide ",(0,i.jsx)(t.a,{href:"/contracts/lido-locator",children:"LidoLocator"})," instance."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"function getLidoLocator() returns (address)\n"})}),"\n",(0,i.jsx)(t.h3,{id:"getoraclereportlimits",children:"getOracleReportLimits()"}),"\n",(0,i.jsxs)(t.p,{children:["Returns the limits list used for the sanity checks as the ",(0,i.jsx)(t.a,{href:"#limits-list",children:(0,i.jsx)(t.code,{children:"LimitsList"})})," type."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"function getOracleReportLimits() returns (LimitsList memory)\n"})}),"\n",(0,i.jsx)(t.h3,{id:"getmaxpositivetokenrebase",children:"getMaxPositiveTokenRebase()"}),"\n",(0,i.jsxs)(t.p,{children:["Returns max positive token rebase value with 1e9 precision (e.g.: ",(0,i.jsx)(t.code,{children:"1e6"})," \u2014 0.1%; ",(0,i.jsx)(t.code,{children:"1e9"})," \u2014 100%):"]}),"\n",(0,i.jsxs)(t.admonition,{type:"note",children:[(0,i.jsx)(t.p,{children:"Special values:"}),(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"0"})," (zero value) means uninitialized"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"type(uint64).max"})," means unlimited, e.g. not enforced"]}),"\n"]})]}),"\n",(0,i.jsx)(t.p,{children:"Get max positive rebase allowed per single oracle report. Token rebase happens on total supply and/or total\nshares adjustment, while huge positive rebase can incur oracle report sandwiching stealing part of the\nstETH holders' rewards."}),"\n",(0,i.jsx)(t.p,{children:"The relative positive rebase value derived as follows:"}),"\n",(0,i.jsxs)(t.p,{children:["stETH balance for the ",(0,i.jsx)(t.code,{children:"account"})," defined as:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"    balanceOf(account) =\n        shares[account] * totalPooledEther / totalShares = shares[account] * shareRate\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Suppose shareRate changes when oracle reports (see ",(0,i.jsx)(t.code,{children:"handleOracleReport"}),")\nwhich means that token rebase happens:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"    preShareRate = preTotalPooledEther() / preTotalShares()\n    postShareRate = postTotalPooledEther() / postTotalShares()\n    R = (postShareRate - preShareRate) / preShareRate\n"})}),"\n",(0,i.jsxs)(t.p,{children:["here ",(0,i.jsx)(t.code,{children:"R > 0"})," corresponds to the relative positive rebase value (i.e., instant APR)."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"function getMaxPositiveTokenRebase() returns (uint256)\n"})}),"\n",(0,i.jsx)(t.h3,{id:"smoothentokenrebase",children:"smoothenTokenRebase()"}),"\n",(0,i.jsx)(t.p,{children:"Evaluates the following amounts during Lido's oracle report processing:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"the allowed ETH amount that might be taken from the withdrawal vault and EL rewards vault"}),"\n",(0,i.jsx)(t.li,{children:"the allowed amount of stETH shares to be burnt"}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"function smoothenTokenRebase(\n    uint256 _preTotalPooledEther,\n    uint256 _preTotalShares,\n    uint256 _preCLBalance,\n    uint256 _postCLBalance,\n    uint256 _withdrawalVaultBalance,\n    uint256 _elRewardsVaultBalance,\n    uint256 _sharesRequestedToBurn,\n    uint256 _etherToLockForWithdrawals,\n    uint256 _newSharesToBurnForWithdrawals\n) returns (\n    uint256 withdrawals,\n    uint256 elRewards,\n    uint256 simulatedSharesToBurn,\n    uint256 sharesToBurn\n)\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-7",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_preTotalPooledEther"})})," \u2014 total amount of ETH controlled by the protocol"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_preTotalShares"})})," \u2014 total amount of minted stETH shares"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_preCLBalance"})})," \u2014 sum of all Lido validators' balances on the Consensus Layer before the current oracle report"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_postCLBalance"})})," \u2014 sum of all Lido validators' balances on the Consensus Layer after the current oracle report"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_withdrawalVaultBalance"})})," \u2014 withdrawal vault balance on Execution Layer for the report calculation moment"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_elRewardsVaultBalance"})})," \u2014 elRewards vault balance on Execution Layer for the report calculation moment"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_sharesRequestedToBurn"})})," \u2014 shares requested to burn through Burner for the report calculation moment"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_etherToLockForWithdrawals"})})," \u2014 ether to lock on withdrawals queue contract"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_newSharesToBurnForWithdrawals"})})," \u2014 new shares to burn due to withdrawal requests finalization"]}),"\n"]}),"\n",(0,i.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"withdrawals"})})," \u2014 ETH amount allowed to be taken from the withdrawals vault"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"elRewards"})})," \u2014 ETH amount allowed to be taken from the EL rewards vault"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"simulatedSharesToBurn"})})," \u2014 simulated amount of shares to be burnt (if no ether locked on withdrawals)"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"sharesToBurn"})})," \u2014 amount of shares to be burnt (accounting for withdrawals finalization)"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"lever-methods",children:"Lever Methods"}),"\n",(0,i.jsx)(t.h3,{id:"setoraclereportlimits",children:"setOracleReportLimits()"}),"\n",(0,i.jsx)(t.p,{children:"Sets the new values for the limits list."}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Requires ",(0,i.jsx)(t.code,{children:"ALL_LIMITS_MANAGER_ROLE"})," to be granted to the caller."]}),"\n",(0,i.jsxs)(t.li,{children:["Reverts with ",(0,i.jsx)(t.code,{children:"IncorrectLimitValue(uint256 value, uint256 minAllowedValue, uint256 maxAllowedValue)"})," error when some\nvalue in the passed data out of the allowed range.\nSee details of allowed value boundaries in the ",(0,i.jsx)(t.a,{href:"#limits-list",children:"Limits List"})," section."]}),"\n"]})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"function setOracleReportLimits(LimitsList memory _limitsList)\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-8",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_limitsList"})})," \u2014 new limits list values"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"setchurnvalidatorsperdaylimit",children:"setChurnValidatorsPerDayLimit()"}),"\n",(0,i.jsxs)(t.p,{children:["Sets the new value for the ",(0,i.jsx)(t.code,{children:"LimitsList.churnValidatorsPerDayLimit"}),".\nThe limit is applicable for ",(0,i.jsx)(t.em,{children:(0,i.jsx)(t.strong,{children:"appeared"})})," and ",(0,i.jsx)(t.em,{children:(0,i.jsx)(t.strong,{children:"exited"})})," validators."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Requires ",(0,i.jsx)(t.code,{children:"CHURN_VALIDATORS_PER_DAY_LIMIT_MANAGER_ROLE"})," to be granted to the caller."]}),"\n",(0,i.jsxs)(t.li,{children:["Reverts with ",(0,i.jsx)(t.code,{children:"IncorrectLimitValue()"})," error when the passed value is out of the allowed range.\nSee ",(0,i.jsx)(t.a,{href:"#limits-list",children:"Limits List"})," section for details."]}),"\n"]})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"function setChurnValidatorsPerDayLimit(uint256 _churnValidatorsPerDayLimit)\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-9",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_churnValidatorsPerDayLimit"})})," \u2014 new ",(0,i.jsx)(t.code,{children:"LimitsList.churnValidatorsPerDayLimit"})," value"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"setoneoffclbalancedecreasebplimit",children:"setOneOffCLBalanceDecreaseBPLimit()"}),"\n",(0,i.jsxs)(t.p,{children:["Sets the new value for the ",(0,i.jsx)(t.code,{children:"LimitsList.oneOffCLBalanceDecreaseBPLimit"})," variable."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Requires ",(0,i.jsx)(t.code,{children:"ONE_OFF_CL_BALANCE_DECREASE_LIMIT_MANAGER_ROLE"})," to be granted to the caller."]}),"\n",(0,i.jsxs)(t.li,{children:["Reverts with ",(0,i.jsx)(t.code,{children:"IncorrectLimitValue()"})," error when the passed value is out of the allowed range.\nSee ",(0,i.jsx)(t.a,{href:"#limits-list",children:"Limits List"})," section for details."]}),"\n"]})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"function setOneOffCLBalanceDecreaseBPLimit(uint256 _oneOffCLBalanceDecreaseBPLimit)\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-10",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_oneOffCLBalanceDecreaseBPLimit"})})," \u2014 new value for ",(0,i.jsx)(t.code,{children:"LimitsList.oneOffCLBalanceDecreaseBPLimit"})]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"setannualbalanceincreasebplimit",children:"setAnnualBalanceIncreaseBPLimit()"}),"\n",(0,i.jsxs)(t.p,{children:["Sets the new value for the ",(0,i.jsx)(t.code,{children:"LimitsList.annualBalanceIncreaseBPLimit"})," variable."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Requires ",(0,i.jsx)(t.code,{children:"ANNUAL_BALANCE_INCREASE_LIMIT_MANAGER_ROLE"})," to be granted to the caller."]}),"\n",(0,i.jsxs)(t.li,{children:["Reverts with ",(0,i.jsx)(t.code,{children:"IncorrectLimitValue()"})," error when the passed value is out of the allowed range.\nSee ",(0,i.jsx)(t.a,{href:"#limits-list",children:"Limits List"})," section for details."]}),"\n"]})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"function setAnnualBalanceIncreaseBPLimit(uint256 _annualBalanceIncreaseBPLimit)\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-11",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_annualBalanceIncreaseBPLimit"})})," \u2014 new value for ",(0,i.jsx)(t.code,{children:"LimitsList.annualBalanceIncreaseBPLimit"})]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"setsimulatedshareratedeviationbplimit",children:"setSimulatedShareRateDeviationBPLimit()"}),"\n",(0,i.jsxs)(t.p,{children:["Sets the new value for the ",(0,i.jsx)(t.code,{children:"LimitsList.simulatedShareRateDeviationBPLimit"})," variable."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Requires ",(0,i.jsx)(t.code,{children:"SHARE_RATE_DEVIATION_LIMIT_MANAGER_ROLE"})," to be granted to the caller."]}),"\n",(0,i.jsxs)(t.li,{children:["Reverts with ",(0,i.jsx)(t.code,{children:"IncorrectLimitValue()"})," error when the passed value is out of the allowed range.\nSee ",(0,i.jsx)(t.a,{href:"#limits-list",children:"Limits List"})," section for details."]}),"\n"]})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"function setSimulatedShareRateDeviationBPLimit(uint256 _simulatedShareRateDeviationBPLimit)\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-12",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_simulatedShareRateDeviationBPLimit"})})," \u2014 new value for ",(0,i.jsx)(t.code,{children:"LimitsList.simulatedShareRateDeviationBPLimit"})]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"setmaxexitrequestsperoraclereport",children:"setMaxExitRequestsPerOracleReport()"}),"\n",(0,i.jsxs)(t.p,{children:["Sets the new value for the ",(0,i.jsx)(t.code,{children:"LimitsList.maxValidatorExitRequestsPerReport"}),"."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Requires ",(0,i.jsx)(t.code,{children:"MAX_VALIDATOR_EXIT_REQUESTS_PER_REPORT_ROLE"})," to be granted to the caller."]}),"\n",(0,i.jsxs)(t.li,{children:["Reverts with ",(0,i.jsx)(t.code,{children:"IncorrectLimitValue()"})," error when the passed value is out of the allowed range.\nSee ",(0,i.jsx)(t.a,{href:"#limits-list",children:"Limits List"})," section for details."]}),"\n"]})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"function setMaxExitRequestsPerOracleReport(uint256 _maxValidatorExitRequestsPerReport)\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-13",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_maxValidatorExitRequestsPerReport"})})," \u2014 new value for ",(0,i.jsx)(t.code,{children:"LimitsList.maxValidatorExitRequestsPerReport"})]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"setrequesttimestampmargin",children:"setRequestTimestampMargin()"}),"\n",(0,i.jsxs)(t.p,{children:["Sets the new value for the ",(0,i.jsx)(t.code,{children:"LimitsList.requestTimestampMargin"})," variable."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Requires ",(0,i.jsx)(t.code,{children:"REQUEST_TIMESTAMP_MARGIN_MANAGER_ROLE"})," to be granted to the caller."]}),"\n",(0,i.jsxs)(t.li,{children:["Reverts with ",(0,i.jsx)(t.code,{children:"IncorrectLimitValue()"})," error when the passed value is out of the allowed range.\nSee ",(0,i.jsx)(t.a,{href:"#limits-list",children:"Limits List"})," section for details."]}),"\n"]})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"function setRequestTimestampMargin(uint256 _requestTimestampMargin)\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-14",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_requestTimestampMargin"})})," \u2014 new new value for ",(0,i.jsx)(t.code,{children:"LimitsList.requestTimestampMargin"})]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"setmaxpositivetokenrebase",children:"setMaxPositiveTokenRebase()"}),"\n",(0,i.jsxs)(t.p,{children:["Sets the new value for the ",(0,i.jsx)(t.code,{children:"LimitsList.maxPositiveTokenRebase"})," variable."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Requires ",(0,i.jsx)(t.code,{children:"MAX_POSITIVE_TOKEN_REBASE_MANAGER_ROLE"})," to be granted to the caller."]}),"\n",(0,i.jsxs)(t.li,{children:["Reverts with ",(0,i.jsx)(t.code,{children:"IncorrectLimitValue()"})," error when the passed value is out of the allowed range.\nSee ",(0,i.jsx)(t.a,{href:"#limits-list",children:"Limits List"})," section for details."]}),"\n"]})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"function setMaxPositiveTokenRebase(uint256 _maxPositiveTokenRebase)\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-15",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_maxPositiveTokenRebase"})})," \u2014 new value for ",(0,i.jsx)(t.code,{children:"LimitsList.maxPositiveTokenRebase"})]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"setmaxaccountingextradatalistitemscount",children:"setMaxAccountingExtraDataListItemsCount()"}),"\n",(0,i.jsxs)(t.p,{children:["Sets the new value for the ",(0,i.jsx)(t.code,{children:"LimitsList.maxAccountingExtraDataListItemsCount"})," variable."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Requires ",(0,i.jsx)(t.code,{children:"MAX_ACCOUNTING_EXTRA_DATA_LIST_ITEMS_COUNT_ROLE"})," to be granted to the caller."]}),"\n",(0,i.jsxs)(t.li,{children:["Reverts with ",(0,i.jsx)(t.code,{children:"IncorrectLimitValue()"})," error when the passed value is out of the allowed range.\nSee ",(0,i.jsx)(t.a,{href:"#limits-list",children:"Limits List"})," section for details."]}),"\n"]})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"function setMaxAccountingExtraDataListItemsCount(uint256 _maxAccountingExtraDataListItemsCount)\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-16",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_maxAccountingExtraDataListItemsCount"})})," \u2014 new value for ",(0,i.jsx)(t.code,{children:"LimitsList.maxAccountingExtraDataListItemsCount"})]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"setmaxnodeoperatorsperextradataitemcount",children:"setMaxNodeOperatorsPerExtraDataItemCount()"}),"\n",(0,i.jsxs)(t.p,{children:["Sets the new value for the ",(0,i.jsx)(t.code,{children:"LimitsList.maxNodeOperatorsPerExtraDataItemCount"})," variable."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Requires ",(0,i.jsx)(t.code,{children:"MAX_NODE_OPERATORS_PER_EXTRA_DATA_ITEM_COUNT_ROLE"})," to be granted to the caller."]}),"\n",(0,i.jsxs)(t.li,{children:["Reverts with ",(0,i.jsx)(t.code,{children:"IncorrectLimitValue()"})," error when the passed value is out of the allowed range.\nSee ",(0,i.jsx)(t.a,{href:"#limits-list",children:"Limits List"})," section for details."]}),"\n"]})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"function setMaxNodeOperatorsPerExtraDataItemCount(uint256 _maxNodeOperatorsPerExtraDataItemCount)\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-17",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"_maxNodeOperatorsPerExtraDataItemCount"})})," \u2014 new value for ",(0,i.jsx)(t.code,{children:"LimitsList.maxNodeOperatorsPerExtraDataItemCount"})]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"permissions",children:"Permissions"}),"\n",(0,i.jsx)(t.h3,{id:"all_limits_manager_role",children:"ALL_LIMITS_MANAGER_ROLE()"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:'bytes32 public constant ALL_LIMITS_MANAGER_ROLE = keccak256("ALL_LIMITS_MANAGER_ROLE")\n'})}),"\n",(0,i.jsxs)(t.p,{children:["Granting this role allows updating ",(0,i.jsx)(t.strong,{children:"ANY"})," value of the Limits List.\nSee ",(0,i.jsx)(t.a,{href:"#setoraclereportlimits",children:(0,i.jsx)(t.code,{children:"setOracleReportLimits()"})})," method."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Grant this role with caution and give preference to the granular roles described below."})}),"\n",(0,i.jsx)(t.h3,{id:"churn_validators_per_day_limit_manager_role",children:"CHURN_VALIDATORS_PER_DAY_LIMIT_MANAGER_ROLE()"}),"\n",(0,i.jsxs)(t.p,{children:["Granting this role allows updating the ",(0,i.jsx)(t.code,{children:"churnValidatorsPerDayLimit"})," value of the ",(0,i.jsx)(t.a,{href:"#limits-list",children:"Limits List"}),".\nSee the ",(0,i.jsx)(t.a,{href:"#setchurnvalidatorsperdaylimit",children:(0,i.jsx)(t.code,{children:"setChurnValidatorsPerDayLimit()"})})," method."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:'bytes32 public constant CHURN_VALIDATORS_PER_DAY_LIMIT_MANAGER_ROLE =\n    keccak256("CHURN_VALIDATORS_PER_DAY_LIMIT_MANAGER_ROLE")\n'})}),"\n",(0,i.jsx)(t.h3,{id:"one_off_cl_balance_decrease_limit_manager_role",children:"ONE_OFF_CL_BALANCE_DECREASE_LIMIT_MANAGER_ROLE()"}),"\n",(0,i.jsxs)(t.p,{children:["Granting this role allows updating the ",(0,i.jsx)(t.code,{children:"annualBalanceIncreaseBPLimit"})," value of the ",(0,i.jsx)(t.a,{href:"#limits-list",children:"Limits List"}),".\nSee the ",(0,i.jsx)(t.a,{href:"#setoneoffclbalancedecreasebplimit",children:(0,i.jsx)(t.code,{children:"setOneOffCLBalanceDecreaseBPLimit()"})})," method."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:'bytes32 public constant ONE_OFF_CL_BALANCE_DECREASE_LIMIT_MANAGER_ROLE =\n    keccak256("ONE_OFF_CL_BALANCE_DECREASE_LIMIT_MANAGER_ROLE")\n'})}),"\n",(0,i.jsx)(t.h3,{id:"annual_balance_increase_limit_manager_role",children:"ANNUAL_BALANCE_INCREASE_LIMIT_MANAGER_ROLE()"}),"\n",(0,i.jsxs)(t.p,{children:["Granting this role allows updating the ",(0,i.jsx)(t.code,{children:"oneOffCLBalanceDecreaseBPLimit"})," value of the ",(0,i.jsx)(t.a,{href:"#limits-list",children:"Limits List"}),".\nSee the ",(0,i.jsx)(t.a,{href:"#setannualbalanceincreasebplimit",children:(0,i.jsx)(t.code,{children:"setAnnualBalanceIncreaseBPLimit()"})})," method."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:'bytes32 public constant ANNUAL_BALANCE_INCREASE_LIMIT_MANAGER_ROLE =\n    keccak256("ANNUAL_BALANCE_INCREASE_LIMIT_MANAGER_ROLE")\n'})}),"\n",(0,i.jsx)(t.h3,{id:"share_rate_deviation_limit_manager_role",children:"SHARE_RATE_DEVIATION_LIMIT_MANAGER_ROLE()"}),"\n",(0,i.jsxs)(t.p,{children:["Granting this role allows updating the ",(0,i.jsx)(t.code,{children:"simulatedShareRateDeviationBPLimit"})," value of the ",(0,i.jsx)(t.a,{href:"#limits-list",children:"Limits List"}),".\nSee the ",(0,i.jsx)(t.a,{href:"#setsimulatedshareratedeviationbplimit",children:(0,i.jsx)(t.code,{children:"setSimulatedShareRateDeviationBPLimit()"})})," method."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:'bytes32 public constant SHARE_RATE_DEVIATION_LIMIT_MANAGER_ROLE =\n    keccak256("SHARE_RATE_DEVIATION_LIMIT_MANAGER_ROLE")\n'})}),"\n",(0,i.jsx)(t.h3,{id:"max_validator_exit_requests_per_report_role",children:"MAX_VALIDATOR_EXIT_REQUESTS_PER_REPORT_ROLE()"}),"\n",(0,i.jsxs)(t.p,{children:["Granting this role allows updating the ",(0,i.jsx)(t.code,{children:"maxValidatorExitRequestsPerReport"})," value of the ",(0,i.jsx)(t.a,{href:"#limits-list",children:"Limits List"}),".\nSee the ",(0,i.jsx)(t.a,{href:"#setmaxexitrequestsperoraclereport",children:(0,i.jsx)(t.code,{children:"setMaxExitRequestsPerOracleReport()"})})," method."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:'bytes32 public constant MAX_VALIDATOR_EXIT_REQUESTS_PER_REPORT_ROLE =\n    keccak256("MAX_VALIDATOR_EXIT_REQUESTS_PER_REPORT_ROLE")\n'})}),"\n",(0,i.jsx)(t.h3,{id:"max_accounting_extra_data_list_items_count_role",children:"MAX_ACCOUNTING_EXTRA_DATA_LIST_ITEMS_COUNT_ROLE()"}),"\n",(0,i.jsxs)(t.p,{children:["Granting this role allows updating the ",(0,i.jsx)(t.code,{children:"maxAccountingExtraDataListItemsCount"})," value of the ",(0,i.jsx)(t.a,{href:"#limits-list",children:"Limits List"}),".\nSee the ",(0,i.jsx)(t.a,{href:"#setmaxaccountingextradatalistitemscount",children:(0,i.jsx)(t.code,{children:"setMaxAccountingExtraDataListItemsCount()"})})," method."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:'bytes32 public constant MAX_ACCOUNTING_EXTRA_DATA_LIST_ITEMS_COUNT_ROLE =\n    keccak256("MAX_ACCOUNTING_EXTRA_DATA_LIST_ITEMS_COUNT_ROLE")\n'})}),"\n",(0,i.jsx)(t.h3,{id:"max_node_operators_per_extra_data_item_count_role",children:"MAX_NODE_OPERATORS_PER_EXTRA_DATA_ITEM_COUNT_ROLE()"}),"\n",(0,i.jsxs)(t.p,{children:["Granting this role allows updating the ",(0,i.jsx)(t.code,{children:"maxNodeOperatorsPerExtraDataItemCount"})," value of the ",(0,i.jsx)(t.a,{href:"#limits-list",children:"Limits List"}),".\nSee the ",(0,i.jsx)(t.a,{href:"#setmaxnodeoperatorsperextradataitemcount",children:(0,i.jsx)(t.code,{children:"setMaxNodeOperatorsPerExtraDataItemCount()"})})," method."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:'bytes32 public constant MAX_NODE_OPERATORS_PER_EXTRA_DATA_ITEM_COUNT_ROLE =\n    keccak256("MAX_NODE_OPERATORS_PER_EXTRA_DATA_ITEM_COUNT_ROLE")\n'})}),"\n",(0,i.jsx)(t.h3,{id:"request_timestamp_margin_manager_role",children:"REQUEST_TIMESTAMP_MARGIN_MANAGER_ROLE()"}),"\n",(0,i.jsxs)(t.p,{children:["Granting this role allows updating the ",(0,i.jsx)(t.code,{children:"requestTimestampMargin"})," value of the ",(0,i.jsx)(t.a,{href:"#limits-list",children:"Limits List"}),".\nSee the ",(0,i.jsx)(t.a,{href:"#setrequesttimestampmargin",children:(0,i.jsx)(t.code,{children:"setRequestTimestampMargin()"})})," method."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:'bytes32 public constant REQUEST_TIMESTAMP_MARGIN_MANAGER_ROLE\n    = keccak256("REQUEST_TIMESTAMP_MARGIN_MANAGER_ROLE")\n'})}),"\n",(0,i.jsx)(t.h3,{id:"max_positive_token_rebase_manager_role",children:"MAX_POSITIVE_TOKEN_REBASE_MANAGER_ROLE()"}),"\n",(0,i.jsxs)(t.p,{children:["Granting this role allows updating the ",(0,i.jsx)(t.code,{children:"maxPositiveTokenRebase"})," value of the ",(0,i.jsx)(t.a,{href:"#limits-list",children:"Limits List"}),".\nSee the ",(0,i.jsx)(t.a,{href:"#setmaxpositivetokenrebase",children:(0,i.jsx)(t.code,{children:"setMaxPositiveTokenRebase()"})})," method."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:'bytes32 public constant MAX_POSITIVE_TOKEN_REBASE_MANAGER_ROLE =\n    keccak256("MAX_POSITIVE_TOKEN_REBASE_MANAGER_ROLE")\n'})}),"\n",(0,i.jsx)(t.h2,{id:"events",children:"Events"}),"\n",(0,i.jsx)(t.h3,{id:"churnvalidatorsperdaylimitset",children:"ChurnValidatorsPerDayLimitSet()"}),"\n",(0,i.jsxs)(t.p,{children:["Emits whenever the value of the ",(0,i.jsx)(t.code,{children:"LimitsList.churnValidatorsPerDayLimit"})," value is changed."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"event ChurnValidatorsPerDayLimitSet(uint256 churnValidatorsPerDayLimit);\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-18",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"churnValidatorsPerDayLimit"})})," \u2014 new value of the ",(0,i.jsx)(t.code,{children:"LimitsList.churnValidatorsPerDayLimit"})]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"oneoffclbalancedecreasebplimitset",children:"OneOffCLBalanceDecreaseBPLimitSet()"}),"\n",(0,i.jsxs)(t.p,{children:["Emits whenever the value of the ",(0,i.jsx)(t.code,{children:"LimitsList.oneOffCLBalanceDecreaseBPLimit"})," value is changed."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"event OneOffCLBalanceDecreaseBPLimitSet(uint256 oneOffCLBalanceDecreaseBPLimit);\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-19",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"oneOffCLBalanceDecreaseBPLimit"})})," \u2014 new value of the ",(0,i.jsx)(t.code,{children:"LimitsList.oneOffCLBalanceDecreaseBPLimit"})]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"annualbalanceincreasebplimitset",children:"AnnualBalanceIncreaseBPLimitSet()"}),"\n",(0,i.jsxs)(t.p,{children:["Emits whenever the value of the ",(0,i.jsx)(t.code,{children:"LimitsList.annualBalanceIncreaseBPLimit"})," value is changed."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"event AnnualBalanceIncreaseBPLimitSet(uint256 annualBalanceIncreaseBPLimit);\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-20",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"annualBalanceIncreaseBPLimit"})})," \u2014 new value of the ",(0,i.jsx)(t.code,{children:"LimitsList.annualBalanceIncreaseBPLimit"})]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"simulatedshareratedeviationbplimitset",children:"SimulatedShareRateDeviationBPLimitSet()"}),"\n",(0,i.jsxs)(t.p,{children:["Emits whenever the value of the ",(0,i.jsx)(t.code,{children:"LimitsList.simulatedShareRateDeviationBPLimit"})," value is changed."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"event SimulatedShareRateDeviationBPLimitSet(uint256 simulatedShareRateDeviationBPLimit);\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-21",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"annualBalanceIncreaseBPLimit"})})," \u2014 new value of the ",(0,i.jsx)(t.code,{children:"LimitsList.simulatedShareRateDeviationBPLimit"})]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"maxpositivetokenrebaseset",children:"MaxPositiveTokenRebaseSet()"}),"\n",(0,i.jsxs)(t.p,{children:["Emits whenever the value of the ",(0,i.jsx)(t.code,{children:"LimitsList.maxPositiveTokenRebase"})," value is changed."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"event MaxPositiveTokenRebaseSet(uint256 maxPositiveTokenRebase);\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-22",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"annualBalanceIncreaseBPLimit"})})," \u2014 new value of the ",(0,i.jsx)(t.code,{children:"LimitsList.maxPositiveTokenRebase"})]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"maxvalidatorexitrequestsperreportset",children:"MaxValidatorExitRequestsPerReportSet()"}),"\n",(0,i.jsxs)(t.p,{children:["Emits whenever the value of the ",(0,i.jsx)(t.code,{children:"LimitsList.maxValidatorExitRequestsPerReport"})," value is changed."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"event MaxValidatorExitRequestsPerReportSet(uint256 maxValidatorExitRequestsPerReport);\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-23",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"maxValidatorExitRequestsPerReport"})})," \u2014 new value of the ",(0,i.jsx)(t.code,{children:"LimitsList.maxValidatorExitRequestsPerReport"})]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"maxaccountingextradatalistitemscountset",children:"MaxAccountingExtraDataListItemsCountSet()"}),"\n",(0,i.jsxs)(t.p,{children:["Emits whenever the value of the ",(0,i.jsx)(t.code,{children:"LimitsList.maxAccountingExtraDataListItemsCount"})," value is changed."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"event MaxAccountingExtraDataListItemsCountSet(uint256 maxAccountingExtraDataListItemsCount);\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-24",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"maxAccountingExtraDataListItemsCount"})})," \u2014 new value of the ",(0,i.jsx)(t.code,{children:"LimitsList.maxAccountingExtraDataListItemsCount"})]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"maxnodeoperatorsperextradataitemcountset",children:"MaxNodeOperatorsPerExtraDataItemCountSet()"}),"\n",(0,i.jsxs)(t.p,{children:["Emits whenever the value of the ",(0,i.jsx)(t.code,{children:"LimitsList.maxNodeOperatorsPerExtraDataItemCount"})," value is changed."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"event MaxNodeOperatorsPerExtraDataItemCountSet(uint256 maxNodeOperatorsPerExtraDataItemCount);\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-25",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"maxNodeOperatorsPerExtraDataItemCount"})})," \u2014 new value of the ",(0,i.jsx)(t.code,{children:"LimitsList.maxNodeOperatorsPerExtraDataItemCount"})]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"requesttimestampmarginset",children:"RequestTimestampMarginSet()"}),"\n",(0,i.jsxs)(t.p,{children:["Emits whenever the value of the ",(0,i.jsx)(t.code,{children:"LimitsList.requestTimestampMargin"})," value is changed."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"event RequestTimestampMarginSet(uint256 requestTimestampMargin);\n"})}),"\n",(0,i.jsx)(t.h4,{id:"arguments-26",children:"Arguments"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"requestTimestampMargin"})})," \u2014 new value of the ",(0,i.jsx)(t.code,{children:"LimitsList.requestTimestampMargin"})]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>l});var i=n(6540);const s={},r=i.createContext(s);function a(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);