"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3999],{1239:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var t=s(4848),r=s(8453);const i={},o="Exit Message Generation & Signing",a={id:"guides/node-operators/exits/exit-message-generation-signing",title:"Exit Message Generation & Signing",description:"Keystores or Dirk",source:"@site/docs/guides/node-operators/exits/exit-message-generation-signing.md",sourceDirName:"guides/node-operators/exits",slug:"/guides/node-operators/exits/exit-message-generation-signing",permalink:"/lido-docs-spanish/guides/node-operators/exits/exit-message-generation-signing",draft:!1,unlisted:!1,editUrl:"https://github.com/adminseedlatam/lido-docs-spanish/edit/main/docs/guides/node-operators/exits/exit-message-generation-signing.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"General Information",permalink:"/lido-docs-spanish/guides/node-operators/exits/general-information"},next:{title:"Flow Examples",permalink:"/lido-docs-spanish/guides/node-operators/exits/flow-examples"}},c={},d=[{value:"Keystores or Dirk",id:"keystores-or-dirk",level:2},{value:"For Keystores:",id:"for-keystores",level:3},{value:"For Dirk:",id:"for-dirk",level:3},{value:"For Web3Signer or Proprietary Signers",id:"for-web3signer-or-proprietary-signers",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"exit-message-generation--signing",children:"Exit Message Generation & Signing"}),"\n",(0,t.jsx)(n.h2,{id:"keystores-or-dirk",children:"Keystores or Dirk"}),"\n",(0,t.jsxs)(n.p,{children:["If your validator signing keys are in ",(0,t.jsx)(n.a,{href:"https://eips.ethereum.org/EIPS/eip-2335",children:"keystores"})," or in ",(0,t.jsx)(n.a,{href:"https://github.com/attestantio/dirk",children:"Dirk"})," remote keymanager, the easiest method is to use ",(0,t.jsx)(n.a,{href:"https://github.com/wealdtech/ethdo",children:"ethdo"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"for-keystores",children:"For Keystores:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Create an ethdo wallet"}),"\n",(0,t.jsx)(n.li,{children:"Import keystores"}),"\n",(0,t.jsx)(n.li,{children:"Generate an exit"}),"\n",(0,t.jsx)(n.li,{children:"Erase the wallet if it's no longer needed"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Create a new wallet:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./ethdo --base-dir=./temp wallet create --wallet=wallet\n"})}),"\n",(0,t.jsx)(n.p,{children:"Add key from a keystore:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./ethdo --base-dir=./temp account import --account=wallet/account --keystore=./ethdo/keystore.json --keystore-passphrase=12345678 --passphrase=pass\n"})}),"\n",(0,t.jsx)(n.p,{children:"Generate and sign an exit message:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./ethdo --base-dir=./temp validator exit --account=wallet/account --passphrase=pass --json --connection=http://consensus_node:5052\n"})}),"\n",(0,t.jsxs)(n.p,{children:["ethdo will print out the exit message to stdout. You can save the file ",(0,t.jsx)(n.code,{children:"ethdo ... > 0x123.json"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"After we are done, delete the wallet:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./ethdo --base-dir=./temp wallet delete --wallet=wallet\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If you are looking for a way to automate the process, check out ",(0,t.jsx)(n.a,{href:"https://gist.github.com/kolyasapphire/d2bafce3cdd04305bc109cbd49728ffe",children:"this example"}),"."]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"Although keystores are encrypted, it is highly recommended to interact with them in a secure environment without internet access."})}),"\n",(0,t.jsx)(n.p,{children:"ethdo allows you to prepare everything necessary for offline exit message generation in one convenient file. For this, on a machine with access to a Consensus Node run:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./ethdo validator exit --prepare-offline --connection=http://consensus_node:5052 --timeout=300s\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This command will pull validators info, fork versions, current epoch and other chain data for offline exit message generation and save it to ",(0,t.jsx)(n.code,{children:"offline-preparation.json"})," in the ",(0,t.jsx)(n.code,{children:"ethdo"})," directory."]}),"\n",(0,t.jsxs)(n.p,{children:["This file can be then transferred to a secure machine along with ",(0,t.jsx)(n.code,{children:"ethdo"})," binary, for example on a encrypted USB drive."]}),"\n",(0,t.jsxs)(n.p,{children:["On the secure machine, put ",(0,t.jsx)(n.code,{children:"offline-preparation.json"})," into the directory ",(0,t.jsx)(n.code,{children:"ethdo"})," is ran from, use ",(0,t.jsx)(n.code,{children:"--offline"})," argument for the ",(0,t.jsx)(n.code,{children:"validator exit"})," command and remove ",(0,t.jsx)(n.code,{children:"--connection"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./ethdo --base-dir=./temp validator exit --account=wallet/account --passphrase=pass --json --offline\n"})}),"\n",(0,t.jsx)(n.h3,{id:"for-dirk",children:"For Dirk:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./ethdo --remote=server.example.com:9091 --client-cert=client.crt --client-key=client.key --server-ca-cert=dirk_authority.crt validator exit --account=Validators/1 --json --connection=http://127.0.0.1:5051\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/wealdtech/ethdo",children:"ethdo"}),"\n",(0,t.jsx)(n.a,{href:"https://github.com/wealdtech/ethdo/blob/master/docs/usage.md#exit",children:"ethdo Docs"})]}),"\n",(0,t.jsx)(n.h2,{id:"for-web3signer-or-proprietary-signers",children:"For Web3Signer or Proprietary Signers"}),"\n",(0,t.jsxs)(n.p,{children:["If you are using the ",(0,t.jsx)(n.code,{children:"/api/v1/modules/{module_id}/validators/generate-unsigned-exit-messages/{operator_id}"})," endpoint of the KAPI, you can skip getting the epoch and constructing an unsigned exit message in the example below."]}),"\n",(0,t.jsx)(n.p,{children:"Get current epoch:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const blockReq = await fetch(CONSENSUS_BLOCK_ENDPOINT)\nconst blockRes = await blockReq.json()\nconst blockNumber = blockRes.data.message.slot\nconst currentEpoch = Math.floor(blockNumber / 32)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Get fork parameters:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const forkReq = await fetch(CONSENSUS_FORK_ENDPOINT)\nconst forkRes = await forkReq.json()\nconst fork = forkRes.data\n"})}),"\n",(0,t.jsx)(n.p,{children:"Get genesis parameters:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const genesisReq = await fetch(CONSENSUS_GENESIS_ENDPOINT)\nconst genesisRes = await genesisReq.json()\nconst genesis_validators_root = genesisRes.data.genesis_validators_root\n"})}),"\n",(0,t.jsx)(n.p,{children:"Construct an exit message:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const voluntaryExit = {\n  epoch: String(currentEpoch),\n  validator_index: String(VALIDATOR_INDEX),\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Prepare a signing request:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const body = {\n  type: 'VOLUNTARY_EXIT',\n  fork_info: {\n    fork,\n    genesis_validators_root,\n  },\n  voluntary_exit: voluntaryExit,\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Send the request:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const signerReq = await fetch(WEB3SIGNER_ENDPOINT, {\n  method: 'POST',\n  headers: { 'Content-Type': 'application/json', Accept: 'application/json' },\n  body: JSON.stringify(body),\n})\nconst signature = await signerReq.text()\n"})}),"\n",(0,t.jsx)(n.p,{children:"Finally, construct a signed exit message:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const signedMessage = {\n  message: voluntaryExit,\n  signature,\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://gist.github.com/kolyasapphire/53dbdab35f1a033b0d37ddf582dce414",children:"Complete Example"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"It's advised to prepare all the necessary parameters (forks, epoch, etc) ahead of time and communicate with Web3Signer securely, for example via a secure network with no other internet access."})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://consensys.github.io/web3signer/web3signer-eth2.html#tag/Signing",children:"Web3Signer API Docs"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(6540);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);