"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8140],{5387:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var a=t(4848),l=t(8453);const s={},i="OracleDaemonConfig",d={id:"contracts/oracle-daemon-config",title:"OracleDaemonConfig",description:"- Source code",source:"@site/docs/contracts/oracle-daemon-config.md",sourceDirName:"contracts",slug:"/contracts/oracle-daemon-config",permalink:"/lido-docs-spanish/contracts/oracle-daemon-config",draft:!1,unlisted:!1,editUrl:"https://github.com/adminseedlatam/lido-docs-spanish/edit/main/docs/contracts/oracle-daemon-config.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"OracleReportSanityChecker",permalink:"/lido-docs-spanish/contracts/oracle-report-sanity-checker"},next:{title:"StakingRouter",permalink:"/lido-docs-spanish/contracts/staking-router"}},r={},c=[{value:"View methods",id:"view-methods",level:2},{value:"get(string calldata _key)",id:"getstring-calldata-_key",level:3},{value:"getList(string[] calldata _keys)",id:"getliststring-calldata-_keys",level:3},{value:"Methods",id:"methods",level:2},{value:"set(string calldata _key, bytes calldata _value)",id:"setstring-calldata-_key-bytes-calldata-_value",level:3},{value:"update(string calldata _key, bytes calldata _value)",id:"updatestring-calldata-_key-bytes-calldata-_value",level:3},{value:"unset(string calldata _key)",id:"unsetstring-calldata-_key",level:3},{value:"Events",id:"events",level:2},{value:"ConfigValueSet",id:"configvalueset",level:3},{value:"ConfigValueUpdated",id:"configvalueupdated",level:3},{value:"ConfigValueUnset",id:"configvalueunset",level:3}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"oracledaemonconfig",children:"OracleDaemonConfig"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/lidofinance/lido-dao/blob/master/contracts/0.8.9/OracleDaemonConfig.sol",children:"Source code"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://etherscan.io/address/0xbf05A929c3D7885a6aeAd833a992dA6E5ac23b09",children:"Deployed contract"})}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["OracleDaemonConfig acts as a parameters registry for the Lido oracle daemon.\nThe full list of params are provided in the Lido V2 mainnet parameters ",(0,a.jsx)(n.a,{href:"/gu%C3%ADas/verify-lido-v2-upgrade-manual#oracledaemonconfig",children:"guide"}),"."]}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["In contrast to ",(0,a.jsx)(n.a,{href:"/contracts/oracle-report-sanity-checker",children:(0,a.jsx)(n.code,{children:"OracleReportSanityChecker"})}),", the stored values aren't enforced by the protocol on-chain code."]})}),"\n",(0,a.jsx)(n.h2,{id:"view-methods",children:"View methods"}),"\n",(0,a.jsx)(n.h3,{id:"getstring-calldata-_key",children:"get(string calldata _key)"}),"\n",(0,a.jsx)(n.p,{children:"Retrieves the value corresponding to the provided key."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:"function get(string calldata _key) external view returns (bytes memory)\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsx)(n.p,{children:"Reverts if value is missing."})}),"\n",(0,a.jsx)(n.h3,{id:"getliststring-calldata-_keys",children:"getList(string[] calldata _keys)"}),"\n",(0,a.jsx)(n.p,{children:"Retrieves a list of values corresponding to the provided keys."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:"function getList(string[] calldata _keys) external view returns (bytes[] memory)\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsx)(n.p,{children:"Reverts if any value for a specific key is missing."})}),"\n",(0,a.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(n.h3,{id:"setstring-calldata-_key-bytes-calldata-_value",children:"set(string calldata _key, bytes calldata _value)"}),"\n",(0,a.jsxs)(n.p,{children:["Sets the value for the provided key. Can only be called by users with ",(0,a.jsx)(n.code,{children:"CONFIG_MANAGER_ROLE"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:"function set(string calldata _key, bytes calldata _value) external\n"})}),"\n",(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsx)(n.p,{children:"Reverts if any of the following is true:"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"value with provided key already exists"}),"\n",(0,a.jsx)(n.li,{children:"value is empty"}),"\n",(0,a.jsxs)(n.li,{children:["called by someone who doesn't have ",(0,a.jsx)(n.code,{children:"CONFIG_MANAGER_ROLE"})," role"]}),"\n"]})]}),"\n",(0,a.jsx)(n.h3,{id:"updatestring-calldata-_key-bytes-calldata-_value",children:"update(string calldata _key, bytes calldata _value)"}),"\n",(0,a.jsxs)(n.p,{children:["Updates the value for the provided key. Can only be called by users with ",(0,a.jsx)(n.code,{children:"CONFIG_MANAGER_ROLE"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:"function update(string calldata _key, bytes calldata _value) external\n"})}),"\n",(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsx)(n.p,{children:"Reverts if any of the following is true:"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"value with provided key doesn't exist"}),"\n",(0,a.jsx)(n.li,{children:"value is the same with the one already set"}),"\n",(0,a.jsx)(n.li,{children:"value is empty"}),"\n",(0,a.jsxs)(n.li,{children:["called by someone who doesn't have ",(0,a.jsx)(n.code,{children:"CONFIG_MANAGER_ROLE"})," role"]}),"\n"]})]}),"\n",(0,a.jsx)(n.h3,{id:"unsetstring-calldata-_key",children:"unset(string calldata _key)"}),"\n",(0,a.jsxs)(n.p,{children:["Removes the value of the provided key. Can only be called by users with ",(0,a.jsx)(n.code,{children:"CONFIG_MANAGER_ROLE"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:"function unset(string calldata _key) external\n"})}),"\n",(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsx)(n.p,{children:"Reverts if any of the following is true:"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"value with provided key doesn't exist"}),"\n",(0,a.jsxs)(n.li,{children:["called by someone who doesn't have ",(0,a.jsx)(n.code,{children:"CONFIG_MANAGER_ROLE"})," role"]}),"\n"]})]}),"\n",(0,a.jsx)(n.h2,{id:"events",children:"Events"}),"\n",(0,a.jsx)(n.h3,{id:"configvalueset",children:"ConfigValueSet"}),"\n",(0,a.jsx)(n.p,{children:"Emitted when a new key-value pair is set."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:"event ConfigValueSet(string indexed key, bytes value)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"configvalueupdated",children:"ConfigValueUpdated"}),"\n",(0,a.jsx)(n.p,{children:"Emitted when a key-value pair is updated."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:"event ConfigValueUpdated(string indexed key, bytes value)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"configvalueunset",children:"ConfigValueUnset"}),"\n",(0,a.jsx)(n.p,{children:"Emitted when a key-value pair is unset."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:"event ConfigValueUnset(string indexed key)\n"})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>d});var a=t(6540);const l={},s=a.createContext(l);function i(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);